STARTING FORMULA

(((((((((G[1,1] (!(INITIAL0))) & ((!(INITIAL0)) | (((!(a0)) & (!(b0))) & (!(c0))))) & ((!(((!(a0)) & (!(b0))) & (!(c0)))) | (G[1,1] (((!(a0)) & (!(b0))) & (c0))))) & ((!(((!(a0)) & (!(b0))) & (c0))) | (G[1,1] (((!(a0)) & (b0)) & (!(c0)))))) & ((!(((!(a0)) & (b0)) & (!(c0)))) | (G[1,1] (((!(a0)) & (b0)) & (c0))))) & ((!(((!(a0)) & (b0)) & (c0))) | (G[1,1] (((a0) & (!(b0))) & (!(c0)))))) & ((!(((a0) & (!(b0))) & (!(c0)))) | (G[1,1] (((a0) & (!(b0))) & (c0))))) & ((!(((a0) & (!(b0))) & (c0))) | (G[1,1] (((a0) & (b0)) & (!(c0)))))) & ((!(((a0) & (b0)) & (!(c0)))) | (G[1,1] (((a0) & (b0)) & (c0))))) & ((!(((a0) & (b0)) & (c0))) | (G[1,1] (((!(a0)) & (!(b0))) & (!(c0)))));


GENERATED SAT QUERY

(declare-fun a0() (Bool))
(declare-fun a1() (Bool))
(declare-fun a2() (Bool))
(declare-fun a3() (Bool))
(declare-fun a4() (Bool))
(declare-fun a5() (Bool))
(declare-fun a6() (Bool))
(declare-fun a7() (Bool))
(declare-fun a8() (Bool))
(declare-fun a9() (Bool))
(declare-fun a10() (Bool))
(declare-fun a11() (Bool))
(declare-fun a12() (Bool))
(declare-fun a13() (Bool))
(declare-fun a14() (Bool))
(declare-fun a15() (Bool))
(declare-fun a16() (Bool))
(declare-fun a17() (Bool))
(declare-fun a18() (Bool))
(declare-fun a19() (Bool))
(declare-fun a20() (Bool))
(declare-fun a21() (Bool))
(declare-fun a22() (Bool))
(declare-fun a23() (Bool))
(declare-fun a24() (Bool))
(declare-fun a25() (Bool))
(declare-fun a26() (Bool))
(declare-fun a27() (Bool))
(declare-fun a28() (Bool))
(declare-fun a29() (Bool))
(declare-fun a30() (Bool))
(declare-fun a31() (Bool))
(declare-fun a32() (Bool))
(declare-fun a33() (Bool))
(declare-fun a34() (Bool))
(declare-fun a35() (Bool))
(declare-fun a36() (Bool))
(declare-fun a37() (Bool))
(declare-fun a38() (Bool))
(declare-fun a39() (Bool))
(declare-fun a40() (Bool))
(declare-fun a41() (Bool))
(declare-fun a42() (Bool))
(declare-fun a43() (Bool))
(declare-fun a44() (Bool))
(declare-fun a45() (Bool))
(declare-fun a46() (Bool))
(declare-fun a47() (Bool))
(declare-fun a48() (Bool))
(declare-fun a49() (Bool))
(declare-fun a50() (Bool))
(declare-fun a51() (Bool))
(declare-fun a52() (Bool))
(declare-fun a53() (Bool))
(declare-fun a54() (Bool))
(declare-fun a55() (Bool))
(declare-fun a56() (Bool))
(declare-fun a57() (Bool))
(declare-fun a58() (Bool))
(declare-fun a59() (Bool))
(declare-fun a60() (Bool))
(declare-fun a61() (Bool))
(declare-fun a62() (Bool))
(declare-fun a63() (Bool))
(declare-fun a64() (Bool))
(declare-fun a65() (Bool))
(declare-fun a66() (Bool))
(declare-fun a67() (Bool))
(declare-fun a68() (Bool))
(declare-fun a69() (Bool))
(declare-fun a70() (Bool))
(declare-fun a71() (Bool))
(declare-fun a72() (Bool))
(declare-fun a73() (Bool))
(declare-fun a74() (Bool))
(declare-fun a75() (Bool))
(declare-fun a76() (Bool))
(declare-fun a77() (Bool))
(declare-fun a78() (Bool))
(declare-fun a79() (Bool))
(declare-fun a80() (Bool))
(declare-fun a81() (Bool))
(declare-fun a82() (Bool))
(declare-fun a83() (Bool))
(declare-fun a84() (Bool))
(declare-fun a85() (Bool))
(declare-fun a86() (Bool))
(declare-fun a87() (Bool))
(declare-fun a88() (Bool))
(declare-fun a89() (Bool))
(declare-fun a90() (Bool))
(declare-fun a91() (Bool))
(declare-fun a92() (Bool))
(declare-fun a93() (Bool))
(declare-fun a94() (Bool))
(declare-fun a95() (Bool))
(declare-fun a96() (Bool))
(declare-fun a97() (Bool))
(declare-fun a98() (Bool))
(declare-fun a99() (Bool))
(declare-fun a100() (Bool))
(declare-fun a101() (Bool))
(declare-fun b0() (Bool))
(declare-fun b1() (Bool))
(declare-fun b2() (Bool))
(declare-fun b3() (Bool))
(declare-fun b4() (Bool))
(declare-fun b5() (Bool))
(declare-fun b6() (Bool))
(declare-fun b7() (Bool))
(declare-fun b8() (Bool))
(declare-fun b9() (Bool))
(declare-fun b10() (Bool))
(declare-fun b11() (Bool))
(declare-fun b12() (Bool))
(declare-fun b13() (Bool))
(declare-fun b14() (Bool))
(declare-fun b15() (Bool))
(declare-fun b16() (Bool))
(declare-fun b17() (Bool))
(declare-fun b18() (Bool))
(declare-fun b19() (Bool))
(declare-fun b20() (Bool))
(declare-fun b21() (Bool))
(declare-fun b22() (Bool))
(declare-fun b23() (Bool))
(declare-fun b24() (Bool))
(declare-fun b25() (Bool))
(declare-fun b26() (Bool))
(declare-fun b27() (Bool))
(declare-fun b28() (Bool))
(declare-fun b29() (Bool))
(declare-fun b30() (Bool))
(declare-fun b31() (Bool))
(declare-fun b32() (Bool))
(declare-fun b33() (Bool))
(declare-fun b34() (Bool))
(declare-fun b35() (Bool))
(declare-fun b36() (Bool))
(declare-fun b37() (Bool))
(declare-fun b38() (Bool))
(declare-fun b39() (Bool))
(declare-fun b40() (Bool))
(declare-fun b41() (Bool))
(declare-fun b42() (Bool))
(declare-fun b43() (Bool))
(declare-fun b44() (Bool))
(declare-fun b45() (Bool))
(declare-fun b46() (Bool))
(declare-fun b47() (Bool))
(declare-fun b48() (Bool))
(declare-fun b49() (Bool))
(declare-fun b50() (Bool))
(declare-fun b51() (Bool))
(declare-fun b52() (Bool))
(declare-fun b53() (Bool))
(declare-fun b54() (Bool))
(declare-fun b55() (Bool))
(declare-fun b56() (Bool))
(declare-fun b57() (Bool))
(declare-fun b58() (Bool))
(declare-fun b59() (Bool))
(declare-fun b60() (Bool))
(declare-fun b61() (Bool))
(declare-fun b62() (Bool))
(declare-fun b63() (Bool))
(declare-fun b64() (Bool))
(declare-fun b65() (Bool))
(declare-fun b66() (Bool))
(declare-fun b67() (Bool))
(declare-fun b68() (Bool))
(declare-fun b69() (Bool))
(declare-fun b70() (Bool))
(declare-fun b71() (Bool))
(declare-fun b72() (Bool))
(declare-fun b73() (Bool))
(declare-fun b74() (Bool))
(declare-fun b75() (Bool))
(declare-fun b76() (Bool))
(declare-fun b77() (Bool))
(declare-fun b78() (Bool))
(declare-fun b79() (Bool))
(declare-fun b80() (Bool))
(declare-fun b81() (Bool))
(declare-fun b82() (Bool))
(declare-fun b83() (Bool))
(declare-fun b84() (Bool))
(declare-fun b85() (Bool))
(declare-fun b86() (Bool))
(declare-fun b87() (Bool))
(declare-fun b88() (Bool))
(declare-fun b89() (Bool))
(declare-fun b90() (Bool))
(declare-fun b91() (Bool))
(declare-fun b92() (Bool))
(declare-fun b93() (Bool))
(declare-fun b94() (Bool))
(declare-fun b95() (Bool))
(declare-fun b96() (Bool))
(declare-fun b97() (Bool))
(declare-fun b98() (Bool))
(declare-fun b99() (Bool))
(declare-fun b100() (Bool))
(declare-fun b101() (Bool))
(declare-fun c0() (Bool))
(declare-fun c1() (Bool))
(declare-fun c2() (Bool))
(declare-fun c3() (Bool))
(declare-fun c4() (Bool))
(declare-fun c5() (Bool))
(declare-fun c6() (Bool))
(declare-fun c7() (Bool))
(declare-fun c8() (Bool))
(declare-fun c9() (Bool))
(declare-fun c10() (Bool))
(declare-fun c11() (Bool))
(declare-fun c12() (Bool))
(declare-fun c13() (Bool))
(declare-fun c14() (Bool))
(declare-fun c15() (Bool))
(declare-fun c16() (Bool))
(declare-fun c17() (Bool))
(declare-fun c18() (Bool))
(declare-fun c19() (Bool))
(declare-fun c20() (Bool))
(declare-fun c21() (Bool))
(declare-fun c22() (Bool))
(declare-fun c23() (Bool))
(declare-fun c24() (Bool))
(declare-fun c25() (Bool))
(declare-fun c26() (Bool))
(declare-fun c27() (Bool))
(declare-fun c28() (Bool))
(declare-fun c29() (Bool))
(declare-fun c30() (Bool))
(declare-fun c31() (Bool))
(declare-fun c32() (Bool))
(declare-fun c33() (Bool))
(declare-fun c34() (Bool))
(declare-fun c35() (Bool))
(declare-fun c36() (Bool))
(declare-fun c37() (Bool))
(declare-fun c38() (Bool))
(declare-fun c39() (Bool))
(declare-fun c40() (Bool))
(declare-fun c41() (Bool))
(declare-fun c42() (Bool))
(declare-fun c43() (Bool))
(declare-fun c44() (Bool))
(declare-fun c45() (Bool))
(declare-fun c46() (Bool))
(declare-fun c47() (Bool))
(declare-fun c48() (Bool))
(declare-fun c49() (Bool))
(declare-fun c50() (Bool))
(declare-fun c51() (Bool))
(declare-fun c52() (Bool))
(declare-fun c53() (Bool))
(declare-fun c54() (Bool))
(declare-fun c55() (Bool))
(declare-fun c56() (Bool))
(declare-fun c57() (Bool))
(declare-fun c58() (Bool))
(declare-fun c59() (Bool))
(declare-fun c60() (Bool))
(declare-fun c61() (Bool))
(declare-fun c62() (Bool))
(declare-fun c63() (Bool))
(declare-fun c64() (Bool))
(declare-fun c65() (Bool))
(declare-fun c66() (Bool))
(declare-fun c67() (Bool))
(declare-fun c68() (Bool))
(declare-fun c69() (Bool))
(declare-fun c70() (Bool))
(declare-fun c71() (Bool))
(declare-fun c72() (Bool))
(declare-fun c73() (Bool))
(declare-fun c74() (Bool))
(declare-fun c75() (Bool))
(declare-fun c76() (Bool))
(declare-fun c77() (Bool))
(declare-fun c78() (Bool))
(declare-fun c79() (Bool))
(declare-fun c80() (Bool))
(declare-fun c81() (Bool))
(declare-fun c82() (Bool))
(declare-fun c83() (Bool))
(declare-fun c84() (Bool))
(declare-fun c85() (Bool))
(declare-fun c86() (Bool))
(declare-fun c87() (Bool))
(declare-fun c88() (Bool))
(declare-fun c89() (Bool))
(declare-fun c90() (Bool))
(declare-fun c91() (Bool))
(declare-fun c92() (Bool))
(declare-fun c93() (Bool))
(declare-fun c94() (Bool))
(declare-fun c95() (Bool))
(declare-fun c96() (Bool))
(declare-fun c97() (Bool))
(declare-fun c98() (Bool))
(declare-fun c99() (Bool))
(declare-fun c100() (Bool))
(declare-fun c101() (Bool))
(declare-fun INITIAL0() (Bool))
(declare-fun INITIAL1() (Bool))
(declare-fun INITIAL2() (Bool))
(declare-fun INITIAL3() (Bool))
(declare-fun INITIAL4() (Bool))
(declare-fun INITIAL5() (Bool))
(declare-fun INITIAL6() (Bool))
(declare-fun INITIAL7() (Bool))
(declare-fun INITIAL8() (Bool))
(declare-fun INITIAL9() (Bool))
(declare-fun INITIAL10() (Bool))
(declare-fun INITIAL11() (Bool))
(declare-fun INITIAL12() (Bool))
(declare-fun INITIAL13() (Bool))
(declare-fun INITIAL14() (Bool))
(declare-fun INITIAL15() (Bool))
(declare-fun INITIAL16() (Bool))
(declare-fun INITIAL17() (Bool))
(declare-fun INITIAL18() (Bool))
(declare-fun INITIAL19() (Bool))
(declare-fun INITIAL20() (Bool))
(declare-fun INITIAL21() (Bool))
(declare-fun INITIAL22() (Bool))
(declare-fun INITIAL23() (Bool))
(declare-fun INITIAL24() (Bool))
(declare-fun INITIAL25() (Bool))
(declare-fun INITIAL26() (Bool))
(declare-fun INITIAL27() (Bool))
(declare-fun INITIAL28() (Bool))
(declare-fun INITIAL29() (Bool))
(declare-fun INITIAL30() (Bool))
(declare-fun INITIAL31() (Bool))
(declare-fun INITIAL32() (Bool))
(declare-fun INITIAL33() (Bool))
(declare-fun INITIAL34() (Bool))
(declare-fun INITIAL35() (Bool))
(declare-fun INITIAL36() (Bool))
(declare-fun INITIAL37() (Bool))
(declare-fun INITIAL38() (Bool))
(declare-fun INITIAL39() (Bool))
(declare-fun INITIAL40() (Bool))
(declare-fun INITIAL41() (Bool))
(declare-fun INITIAL42() (Bool))
(declare-fun INITIAL43() (Bool))
(declare-fun INITIAL44() (Bool))
(declare-fun INITIAL45() (Bool))
(declare-fun INITIAL46() (Bool))
(declare-fun INITIAL47() (Bool))
(declare-fun INITIAL48() (Bool))
(declare-fun INITIAL49() (Bool))
(declare-fun INITIAL50() (Bool))
(declare-fun INITIAL51() (Bool))
(declare-fun INITIAL52() (Bool))
(declare-fun INITIAL53() (Bool))
(declare-fun INITIAL54() (Bool))
(declare-fun INITIAL55() (Bool))
(declare-fun INITIAL56() (Bool))
(declare-fun INITIAL57() (Bool))
(declare-fun INITIAL58() (Bool))
(declare-fun INITIAL59() (Bool))
(declare-fun INITIAL60() (Bool))
(declare-fun INITIAL61() (Bool))
(declare-fun INITIAL62() (Bool))
(declare-fun INITIAL63() (Bool))
(declare-fun INITIAL64() (Bool))
(declare-fun INITIAL65() (Bool))
(declare-fun INITIAL66() (Bool))
(declare-fun INITIAL67() (Bool))
(declare-fun INITIAL68() (Bool))
(declare-fun INITIAL69() (Bool))
(declare-fun INITIAL70() (Bool))
(declare-fun INITIAL71() (Bool))
(declare-fun INITIAL72() (Bool))
(declare-fun INITIAL73() (Bool))
(declare-fun INITIAL74() (Bool))
(declare-fun INITIAL75() (Bool))
(declare-fun INITIAL76() (Bool))
(declare-fun INITIAL77() (Bool))
(declare-fun INITIAL78() (Bool))
(declare-fun INITIAL79() (Bool))
(declare-fun INITIAL80() (Bool))
(declare-fun INITIAL81() (Bool))
(declare-fun INITIAL82() (Bool))
(declare-fun INITIAL83() (Bool))
(declare-fun INITIAL84() (Bool))
(declare-fun INITIAL85() (Bool))
(declare-fun INITIAL86() (Bool))
(declare-fun INITIAL87() (Bool))
(declare-fun INITIAL88() (Bool))
(declare-fun INITIAL89() (Bool))
(declare-fun INITIAL90() (Bool))
(declare-fun INITIAL91() (Bool))
(declare-fun INITIAL92() (Bool))
(declare-fun INITIAL93() (Bool))
(declare-fun INITIAL94() (Bool))
(declare-fun INITIAL95() (Bool))
(declare-fun INITIAL96() (Bool))
(declare-fun INITIAL97() (Bool))
(declare-fun INITIAL98() (Bool))
(declare-fun INITIAL99() (Bool))
(declare-fun INITIAL100() (Bool))
(declare-fun INITIAL101() (Bool))
(define-fun O_t0() Bool(and (and (and (and (and (and (and (and (and (and (not INITIAL1) (or (not INITIAL0) (and (and (not a0) (not b0)) (not c0)))) (or (not (and (and (not a0) (not b0)) (not c0))) (and (and (not a1) (not b1)) c1))) (or (not (and (and (not a0) (not b0)) c0)) (and (and (not a1) b1) (not c1)))) (or (not (and (and (not a0) b0) (not c0))) (and (and (not a1) b1) c1))) (or (not (and (and (not a0) b0) c0)) (and (and a1 (not b1)) (not c1)))) (or (not (and (and a0 (not b0)) (not c0))) (and (and a1 (not b1)) c1))) (or (not (and (and a0 (not b0)) c0)) (and (and a1 b1) (not c1)))) (or (not (and (and a0 b0) (not c0))) (and (and a1 b1) c1))) (or (not (and (and a0 b0) c0)) (and (and (not a1) (not b1)) (not c1)))) INITIAL0))
(assert O_t0)
(define-fun O_t1() Bool(and (and (and (and (and (and (and (and (and (not INITIAL2) (or (not INITIAL1) (and (and (not a1) (not b1)) (not c1)))) (or (not (and (and (not a1) (not b1)) (not c1))) (and (and (not a2) (not b2)) c2))) (or (not (and (and (not a1) (not b1)) c1)) (and (and (not a2) b2) (not c2)))) (or (not (and (and (not a1) b1) (not c1))) (and (and (not a2) b2) c2))) (or (not (and (and (not a1) b1) c1)) (and (and a2 (not b2)) (not c2)))) (or (not (and (and a1 (not b1)) (not c1))) (and (and a2 (not b2)) c2))) (or (not (and (and a1 (not b1)) c1)) (and (and a2 b2) (not c2)))) (or (not (and (and a1 b1) (not c1))) (and (and a2 b2) c2))) (or (not (and (and a1 b1) c1)) (and (and (not a2) (not b2)) (not c2)))))
(assert-soft O_t1)
(define-fun O_t2() Bool(and (and (and (and (and (and (and (and (and (not INITIAL3) (or (not INITIAL2) (and (and (not a2) (not b2)) (not c2)))) (or (not (and (and (not a2) (not b2)) (not c2))) (and (and (not a3) (not b3)) c3))) (or (not (and (and (not a2) (not b2)) c2)) (and (and (not a3) b3) (not c3)))) (or (not (and (and (not a2) b2) (not c2))) (and (and (not a3) b3) c3))) (or (not (and (and (not a2) b2) c2)) (and (and a3 (not b3)) (not c3)))) (or (not (and (and a2 (not b2)) (not c2))) (and (and a3 (not b3)) c3))) (or (not (and (and a2 (not b2)) c2)) (and (and a3 b3) (not c3)))) (or (not (and (and a2 b2) (not c2))) (and (and a3 b3) c3))) (or (not (and (and a2 b2) c2)) (and (and (not a3) (not b3)) (not c3)))))
(assert-soft O_t2)
(define-fun O_t3() Bool(and (and (and (and (and (and (and (and (and (not INITIAL4) (or (not INITIAL3) (and (and (not a3) (not b3)) (not c3)))) (or (not (and (and (not a3) (not b3)) (not c3))) (and (and (not a4) (not b4)) c4))) (or (not (and (and (not a3) (not b3)) c3)) (and (and (not a4) b4) (not c4)))) (or (not (and (and (not a3) b3) (not c3))) (and (and (not a4) b4) c4))) (or (not (and (and (not a3) b3) c3)) (and (and a4 (not b4)) (not c4)))) (or (not (and (and a3 (not b3)) (not c3))) (and (and a4 (not b4)) c4))) (or (not (and (and a3 (not b3)) c3)) (and (and a4 b4) (not c4)))) (or (not (and (and a3 b3) (not c3))) (and (and a4 b4) c4))) (or (not (and (and a3 b3) c3)) (and (and (not a4) (not b4)) (not c4)))))
(assert-soft O_t3)
(define-fun O_t4() Bool(and (and (and (and (and (and (and (and (and (not INITIAL5) (or (not INITIAL4) (and (and (not a4) (not b4)) (not c4)))) (or (not (and (and (not a4) (not b4)) (not c4))) (and (and (not a5) (not b5)) c5))) (or (not (and (and (not a4) (not b4)) c4)) (and (and (not a5) b5) (not c5)))) (or (not (and (and (not a4) b4) (not c4))) (and (and (not a5) b5) c5))) (or (not (and (and (not a4) b4) c4)) (and (and a5 (not b5)) (not c5)))) (or (not (and (and a4 (not b4)) (not c4))) (and (and a5 (not b5)) c5))) (or (not (and (and a4 (not b4)) c4)) (and (and a5 b5) (not c5)))) (or (not (and (and a4 b4) (not c4))) (and (and a5 b5) c5))) (or (not (and (and a4 b4) c4)) (and (and (not a5) (not b5)) (not c5)))))
(assert-soft O_t4)
(define-fun O_t5() Bool(and (and (and (and (and (and (and (and (and (not INITIAL6) (or (not INITIAL5) (and (and (not a5) (not b5)) (not c5)))) (or (not (and (and (not a5) (not b5)) (not c5))) (and (and (not a6) (not b6)) c6))) (or (not (and (and (not a5) (not b5)) c5)) (and (and (not a6) b6) (not c6)))) (or (not (and (and (not a5) b5) (not c5))) (and (and (not a6) b6) c6))) (or (not (and (and (not a5) b5) c5)) (and (and a6 (not b6)) (not c6)))) (or (not (and (and a5 (not b5)) (not c5))) (and (and a6 (not b6)) c6))) (or (not (and (and a5 (not b5)) c5)) (and (and a6 b6) (not c6)))) (or (not (and (and a5 b5) (not c5))) (and (and a6 b6) c6))) (or (not (and (and a5 b5) c5)) (and (and (not a6) (not b6)) (not c6)))))
(assert-soft O_t5)
(define-fun O_t6() Bool(and (and (and (and (and (and (and (and (and (not INITIAL7) (or (not INITIAL6) (and (and (not a6) (not b6)) (not c6)))) (or (not (and (and (not a6) (not b6)) (not c6))) (and (and (not a7) (not b7)) c7))) (or (not (and (and (not a6) (not b6)) c6)) (and (and (not a7) b7) (not c7)))) (or (not (and (and (not a6) b6) (not c6))) (and (and (not a7) b7) c7))) (or (not (and (and (not a6) b6) c6)) (and (and a7 (not b7)) (not c7)))) (or (not (and (and a6 (not b6)) (not c6))) (and (and a7 (not b7)) c7))) (or (not (and (and a6 (not b6)) c6)) (and (and a7 b7) (not c7)))) (or (not (and (and a6 b6) (not c6))) (and (and a7 b7) c7))) (or (not (and (and a6 b6) c6)) (and (and (not a7) (not b7)) (not c7)))))
(assert-soft O_t6)
(define-fun O_t7() Bool(and (and (and (and (and (and (and (and (and (not INITIAL8) (or (not INITIAL7) (and (and (not a7) (not b7)) (not c7)))) (or (not (and (and (not a7) (not b7)) (not c7))) (and (and (not a8) (not b8)) c8))) (or (not (and (and (not a7) (not b7)) c7)) (and (and (not a8) b8) (not c8)))) (or (not (and (and (not a7) b7) (not c7))) (and (and (not a8) b8) c8))) (or (not (and (and (not a7) b7) c7)) (and (and a8 (not b8)) (not c8)))) (or (not (and (and a7 (not b7)) (not c7))) (and (and a8 (not b8)) c8))) (or (not (and (and a7 (not b7)) c7)) (and (and a8 b8) (not c8)))) (or (not (and (and a7 b7) (not c7))) (and (and a8 b8) c8))) (or (not (and (and a7 b7) c7)) (and (and (not a8) (not b8)) (not c8)))))
(assert-soft O_t7)
(define-fun O_t8() Bool(and (and (and (and (and (and (and (and (and (not INITIAL9) (or (not INITIAL8) (and (and (not a8) (not b8)) (not c8)))) (or (not (and (and (not a8) (not b8)) (not c8))) (and (and (not a9) (not b9)) c9))) (or (not (and (and (not a8) (not b8)) c8)) (and (and (not a9) b9) (not c9)))) (or (not (and (and (not a8) b8) (not c8))) (and (and (not a9) b9) c9))) (or (not (and (and (not a8) b8) c8)) (and (and a9 (not b9)) (not c9)))) (or (not (and (and a8 (not b8)) (not c8))) (and (and a9 (not b9)) c9))) (or (not (and (and a8 (not b8)) c8)) (and (and a9 b9) (not c9)))) (or (not (and (and a8 b8) (not c8))) (and (and a9 b9) c9))) (or (not (and (and a8 b8) c8)) (and (and (not a9) (not b9)) (not c9)))))
(assert-soft O_t8)
(define-fun O_t9() Bool(and (and (and (and (and (and (and (and (and (not INITIAL10) (or (not INITIAL9) (and (and (not a9) (not b9)) (not c9)))) (or (not (and (and (not a9) (not b9)) (not c9))) (and (and (not a10) (not b10)) c10))) (or (not (and (and (not a9) (not b9)) c9)) (and (and (not a10) b10) (not c10)))) (or (not (and (and (not a9) b9) (not c9))) (and (and (not a10) b10) c10))) (or (not (and (and (not a9) b9) c9)) (and (and a10 (not b10)) (not c10)))) (or (not (and (and a9 (not b9)) (not c9))) (and (and a10 (not b10)) c10))) (or (not (and (and a9 (not b9)) c9)) (and (and a10 b10) (not c10)))) (or (not (and (and a9 b9) (not c9))) (and (and a10 b10) c10))) (or (not (and (and a9 b9) c9)) (and (and (not a10) (not b10)) (not c10)))))
(assert-soft O_t9)
(define-fun O_t10() Bool(and (and (and (and (and (and (and (and (and (not INITIAL11) (or (not INITIAL10) (and (and (not a10) (not b10)) (not c10)))) (or (not (and (and (not a10) (not b10)) (not c10))) (and (and (not a11) (not b11)) c11))) (or (not (and (and (not a10) (not b10)) c10)) (and (and (not a11) b11) (not c11)))) (or (not (and (and (not a10) b10) (not c10))) (and (and (not a11) b11) c11))) (or (not (and (and (not a10) b10) c10)) (and (and a11 (not b11)) (not c11)))) (or (not (and (and a10 (not b10)) (not c10))) (and (and a11 (not b11)) c11))) (or (not (and (and a10 (not b10)) c10)) (and (and a11 b11) (not c11)))) (or (not (and (and a10 b10) (not c10))) (and (and a11 b11) c11))) (or (not (and (and a10 b10) c10)) (and (and (not a11) (not b11)) (not c11)))))
(assert-soft O_t10)
(define-fun O_t11() Bool(and (and (and (and (and (and (and (and (and (not INITIAL12) (or (not INITIAL11) (and (and (not a11) (not b11)) (not c11)))) (or (not (and (and (not a11) (not b11)) (not c11))) (and (and (not a12) (not b12)) c12))) (or (not (and (and (not a11) (not b11)) c11)) (and (and (not a12) b12) (not c12)))) (or (not (and (and (not a11) b11) (not c11))) (and (and (not a12) b12) c12))) (or (not (and (and (not a11) b11) c11)) (and (and a12 (not b12)) (not c12)))) (or (not (and (and a11 (not b11)) (not c11))) (and (and a12 (not b12)) c12))) (or (not (and (and a11 (not b11)) c11)) (and (and a12 b12) (not c12)))) (or (not (and (and a11 b11) (not c11))) (and (and a12 b12) c12))) (or (not (and (and a11 b11) c11)) (and (and (not a12) (not b12)) (not c12)))))
(assert-soft O_t11)
(define-fun O_t12() Bool(and (and (and (and (and (and (and (and (and (not INITIAL13) (or (not INITIAL12) (and (and (not a12) (not b12)) (not c12)))) (or (not (and (and (not a12) (not b12)) (not c12))) (and (and (not a13) (not b13)) c13))) (or (not (and (and (not a12) (not b12)) c12)) (and (and (not a13) b13) (not c13)))) (or (not (and (and (not a12) b12) (not c12))) (and (and (not a13) b13) c13))) (or (not (and (and (not a12) b12) c12)) (and (and a13 (not b13)) (not c13)))) (or (not (and (and a12 (not b12)) (not c12))) (and (and a13 (not b13)) c13))) (or (not (and (and a12 (not b12)) c12)) (and (and a13 b13) (not c13)))) (or (not (and (and a12 b12) (not c12))) (and (and a13 b13) c13))) (or (not (and (and a12 b12) c12)) (and (and (not a13) (not b13)) (not c13)))))
(assert-soft O_t12)
(define-fun O_t13() Bool(and (and (and (and (and (and (and (and (and (not INITIAL14) (or (not INITIAL13) (and (and (not a13) (not b13)) (not c13)))) (or (not (and (and (not a13) (not b13)) (not c13))) (and (and (not a14) (not b14)) c14))) (or (not (and (and (not a13) (not b13)) c13)) (and (and (not a14) b14) (not c14)))) (or (not (and (and (not a13) b13) (not c13))) (and (and (not a14) b14) c14))) (or (not (and (and (not a13) b13) c13)) (and (and a14 (not b14)) (not c14)))) (or (not (and (and a13 (not b13)) (not c13))) (and (and a14 (not b14)) c14))) (or (not (and (and a13 (not b13)) c13)) (and (and a14 b14) (not c14)))) (or (not (and (and a13 b13) (not c13))) (and (and a14 b14) c14))) (or (not (and (and a13 b13) c13)) (and (and (not a14) (not b14)) (not c14)))))
(assert-soft O_t13)
(define-fun O_t14() Bool(and (and (and (and (and (and (and (and (and (not INITIAL15) (or (not INITIAL14) (and (and (not a14) (not b14)) (not c14)))) (or (not (and (and (not a14) (not b14)) (not c14))) (and (and (not a15) (not b15)) c15))) (or (not (and (and (not a14) (not b14)) c14)) (and (and (not a15) b15) (not c15)))) (or (not (and (and (not a14) b14) (not c14))) (and (and (not a15) b15) c15))) (or (not (and (and (not a14) b14) c14)) (and (and a15 (not b15)) (not c15)))) (or (not (and (and a14 (not b14)) (not c14))) (and (and a15 (not b15)) c15))) (or (not (and (and a14 (not b14)) c14)) (and (and a15 b15) (not c15)))) (or (not (and (and a14 b14) (not c14))) (and (and a15 b15) c15))) (or (not (and (and a14 b14) c14)) (and (and (not a15) (not b15)) (not c15)))))
(assert-soft O_t14)
(define-fun O_t15() Bool(and (and (and (and (and (and (and (and (and (not INITIAL16) (or (not INITIAL15) (and (and (not a15) (not b15)) (not c15)))) (or (not (and (and (not a15) (not b15)) (not c15))) (and (and (not a16) (not b16)) c16))) (or (not (and (and (not a15) (not b15)) c15)) (and (and (not a16) b16) (not c16)))) (or (not (and (and (not a15) b15) (not c15))) (and (and (not a16) b16) c16))) (or (not (and (and (not a15) b15) c15)) (and (and a16 (not b16)) (not c16)))) (or (not (and (and a15 (not b15)) (not c15))) (and (and a16 (not b16)) c16))) (or (not (and (and a15 (not b15)) c15)) (and (and a16 b16) (not c16)))) (or (not (and (and a15 b15) (not c15))) (and (and a16 b16) c16))) (or (not (and (and a15 b15) c15)) (and (and (not a16) (not b16)) (not c16)))))
(assert-soft O_t15)
(define-fun O_t16() Bool(and (and (and (and (and (and (and (and (and (not INITIAL17) (or (not INITIAL16) (and (and (not a16) (not b16)) (not c16)))) (or (not (and (and (not a16) (not b16)) (not c16))) (and (and (not a17) (not b17)) c17))) (or (not (and (and (not a16) (not b16)) c16)) (and (and (not a17) b17) (not c17)))) (or (not (and (and (not a16) b16) (not c16))) (and (and (not a17) b17) c17))) (or (not (and (and (not a16) b16) c16)) (and (and a17 (not b17)) (not c17)))) (or (not (and (and a16 (not b16)) (not c16))) (and (and a17 (not b17)) c17))) (or (not (and (and a16 (not b16)) c16)) (and (and a17 b17) (not c17)))) (or (not (and (and a16 b16) (not c16))) (and (and a17 b17) c17))) (or (not (and (and a16 b16) c16)) (and (and (not a17) (not b17)) (not c17)))))
(assert-soft O_t16)
(define-fun O_t17() Bool(and (and (and (and (and (and (and (and (and (not INITIAL18) (or (not INITIAL17) (and (and (not a17) (not b17)) (not c17)))) (or (not (and (and (not a17) (not b17)) (not c17))) (and (and (not a18) (not b18)) c18))) (or (not (and (and (not a17) (not b17)) c17)) (and (and (not a18) b18) (not c18)))) (or (not (and (and (not a17) b17) (not c17))) (and (and (not a18) b18) c18))) (or (not (and (and (not a17) b17) c17)) (and (and a18 (not b18)) (not c18)))) (or (not (and (and a17 (not b17)) (not c17))) (and (and a18 (not b18)) c18))) (or (not (and (and a17 (not b17)) c17)) (and (and a18 b18) (not c18)))) (or (not (and (and a17 b17) (not c17))) (and (and a18 b18) c18))) (or (not (and (and a17 b17) c17)) (and (and (not a18) (not b18)) (not c18)))))
(assert-soft O_t17)
(define-fun O_t18() Bool(and (and (and (and (and (and (and (and (and (not INITIAL19) (or (not INITIAL18) (and (and (not a18) (not b18)) (not c18)))) (or (not (and (and (not a18) (not b18)) (not c18))) (and (and (not a19) (not b19)) c19))) (or (not (and (and (not a18) (not b18)) c18)) (and (and (not a19) b19) (not c19)))) (or (not (and (and (not a18) b18) (not c18))) (and (and (not a19) b19) c19))) (or (not (and (and (not a18) b18) c18)) (and (and a19 (not b19)) (not c19)))) (or (not (and (and a18 (not b18)) (not c18))) (and (and a19 (not b19)) c19))) (or (not (and (and a18 (not b18)) c18)) (and (and a19 b19) (not c19)))) (or (not (and (and a18 b18) (not c18))) (and (and a19 b19) c19))) (or (not (and (and a18 b18) c18)) (and (and (not a19) (not b19)) (not c19)))))
(assert-soft O_t18)
(define-fun O_t19() Bool(and (and (and (and (and (and (and (and (and (not INITIAL20) (or (not INITIAL19) (and (and (not a19) (not b19)) (not c19)))) (or (not (and (and (not a19) (not b19)) (not c19))) (and (and (not a20) (not b20)) c20))) (or (not (and (and (not a19) (not b19)) c19)) (and (and (not a20) b20) (not c20)))) (or (not (and (and (not a19) b19) (not c19))) (and (and (not a20) b20) c20))) (or (not (and (and (not a19) b19) c19)) (and (and a20 (not b20)) (not c20)))) (or (not (and (and a19 (not b19)) (not c19))) (and (and a20 (not b20)) c20))) (or (not (and (and a19 (not b19)) c19)) (and (and a20 b20) (not c20)))) (or (not (and (and a19 b19) (not c19))) (and (and a20 b20) c20))) (or (not (and (and a19 b19) c19)) (and (and (not a20) (not b20)) (not c20)))))
(assert-soft O_t19)
(define-fun O_t20() Bool(and (and (and (and (and (and (and (and (and (not INITIAL21) (or (not INITIAL20) (and (and (not a20) (not b20)) (not c20)))) (or (not (and (and (not a20) (not b20)) (not c20))) (and (and (not a21) (not b21)) c21))) (or (not (and (and (not a20) (not b20)) c20)) (and (and (not a21) b21) (not c21)))) (or (not (and (and (not a20) b20) (not c20))) (and (and (not a21) b21) c21))) (or (not (and (and (not a20) b20) c20)) (and (and a21 (not b21)) (not c21)))) (or (not (and (and a20 (not b20)) (not c20))) (and (and a21 (not b21)) c21))) (or (not (and (and a20 (not b20)) c20)) (and (and a21 b21) (not c21)))) (or (not (and (and a20 b20) (not c20))) (and (and a21 b21) c21))) (or (not (and (and a20 b20) c20)) (and (and (not a21) (not b21)) (not c21)))))
(assert-soft O_t20)
(define-fun O_t21() Bool(and (and (and (and (and (and (and (and (and (not INITIAL22) (or (not INITIAL21) (and (and (not a21) (not b21)) (not c21)))) (or (not (and (and (not a21) (not b21)) (not c21))) (and (and (not a22) (not b22)) c22))) (or (not (and (and (not a21) (not b21)) c21)) (and (and (not a22) b22) (not c22)))) (or (not (and (and (not a21) b21) (not c21))) (and (and (not a22) b22) c22))) (or (not (and (and (not a21) b21) c21)) (and (and a22 (not b22)) (not c22)))) (or (not (and (and a21 (not b21)) (not c21))) (and (and a22 (not b22)) c22))) (or (not (and (and a21 (not b21)) c21)) (and (and a22 b22) (not c22)))) (or (not (and (and a21 b21) (not c21))) (and (and a22 b22) c22))) (or (not (and (and a21 b21) c21)) (and (and (not a22) (not b22)) (not c22)))))
(assert-soft O_t21)
(define-fun O_t22() Bool(and (and (and (and (and (and (and (and (and (not INITIAL23) (or (not INITIAL22) (and (and (not a22) (not b22)) (not c22)))) (or (not (and (and (not a22) (not b22)) (not c22))) (and (and (not a23) (not b23)) c23))) (or (not (and (and (not a22) (not b22)) c22)) (and (and (not a23) b23) (not c23)))) (or (not (and (and (not a22) b22) (not c22))) (and (and (not a23) b23) c23))) (or (not (and (and (not a22) b22) c22)) (and (and a23 (not b23)) (not c23)))) (or (not (and (and a22 (not b22)) (not c22))) (and (and a23 (not b23)) c23))) (or (not (and (and a22 (not b22)) c22)) (and (and a23 b23) (not c23)))) (or (not (and (and a22 b22) (not c22))) (and (and a23 b23) c23))) (or (not (and (and a22 b22) c22)) (and (and (not a23) (not b23)) (not c23)))))
(assert-soft O_t22)
(define-fun O_t23() Bool(and (and (and (and (and (and (and (and (and (not INITIAL24) (or (not INITIAL23) (and (and (not a23) (not b23)) (not c23)))) (or (not (and (and (not a23) (not b23)) (not c23))) (and (and (not a24) (not b24)) c24))) (or (not (and (and (not a23) (not b23)) c23)) (and (and (not a24) b24) (not c24)))) (or (not (and (and (not a23) b23) (not c23))) (and (and (not a24) b24) c24))) (or (not (and (and (not a23) b23) c23)) (and (and a24 (not b24)) (not c24)))) (or (not (and (and a23 (not b23)) (not c23))) (and (and a24 (not b24)) c24))) (or (not (and (and a23 (not b23)) c23)) (and (and a24 b24) (not c24)))) (or (not (and (and a23 b23) (not c23))) (and (and a24 b24) c24))) (or (not (and (and a23 b23) c23)) (and (and (not a24) (not b24)) (not c24)))))
(assert-soft O_t23)
(define-fun O_t24() Bool(and (and (and (and (and (and (and (and (and (not INITIAL25) (or (not INITIAL24) (and (and (not a24) (not b24)) (not c24)))) (or (not (and (and (not a24) (not b24)) (not c24))) (and (and (not a25) (not b25)) c25))) (or (not (and (and (not a24) (not b24)) c24)) (and (and (not a25) b25) (not c25)))) (or (not (and (and (not a24) b24) (not c24))) (and (and (not a25) b25) c25))) (or (not (and (and (not a24) b24) c24)) (and (and a25 (not b25)) (not c25)))) (or (not (and (and a24 (not b24)) (not c24))) (and (and a25 (not b25)) c25))) (or (not (and (and a24 (not b24)) c24)) (and (and a25 b25) (not c25)))) (or (not (and (and a24 b24) (not c24))) (and (and a25 b25) c25))) (or (not (and (and a24 b24) c24)) (and (and (not a25) (not b25)) (not c25)))))
(assert-soft O_t24)
(define-fun O_t25() Bool(and (and (and (and (and (and (and (and (and (not INITIAL26) (or (not INITIAL25) (and (and (not a25) (not b25)) (not c25)))) (or (not (and (and (not a25) (not b25)) (not c25))) (and (and (not a26) (not b26)) c26))) (or (not (and (and (not a25) (not b25)) c25)) (and (and (not a26) b26) (not c26)))) (or (not (and (and (not a25) b25) (not c25))) (and (and (not a26) b26) c26))) (or (not (and (and (not a25) b25) c25)) (and (and a26 (not b26)) (not c26)))) (or (not (and (and a25 (not b25)) (not c25))) (and (and a26 (not b26)) c26))) (or (not (and (and a25 (not b25)) c25)) (and (and a26 b26) (not c26)))) (or (not (and (and a25 b25) (not c25))) (and (and a26 b26) c26))) (or (not (and (and a25 b25) c25)) (and (and (not a26) (not b26)) (not c26)))))
(assert-soft O_t25)
(define-fun O_t26() Bool(and (and (and (and (and (and (and (and (and (not INITIAL27) (or (not INITIAL26) (and (and (not a26) (not b26)) (not c26)))) (or (not (and (and (not a26) (not b26)) (not c26))) (and (and (not a27) (not b27)) c27))) (or (not (and (and (not a26) (not b26)) c26)) (and (and (not a27) b27) (not c27)))) (or (not (and (and (not a26) b26) (not c26))) (and (and (not a27) b27) c27))) (or (not (and (and (not a26) b26) c26)) (and (and a27 (not b27)) (not c27)))) (or (not (and (and a26 (not b26)) (not c26))) (and (and a27 (not b27)) c27))) (or (not (and (and a26 (not b26)) c26)) (and (and a27 b27) (not c27)))) (or (not (and (and a26 b26) (not c26))) (and (and a27 b27) c27))) (or (not (and (and a26 b26) c26)) (and (and (not a27) (not b27)) (not c27)))))
(assert-soft O_t26)
(define-fun O_t27() Bool(and (and (and (and (and (and (and (and (and (not INITIAL28) (or (not INITIAL27) (and (and (not a27) (not b27)) (not c27)))) (or (not (and (and (not a27) (not b27)) (not c27))) (and (and (not a28) (not b28)) c28))) (or (not (and (and (not a27) (not b27)) c27)) (and (and (not a28) b28) (not c28)))) (or (not (and (and (not a27) b27) (not c27))) (and (and (not a28) b28) c28))) (or (not (and (and (not a27) b27) c27)) (and (and a28 (not b28)) (not c28)))) (or (not (and (and a27 (not b27)) (not c27))) (and (and a28 (not b28)) c28))) (or (not (and (and a27 (not b27)) c27)) (and (and a28 b28) (not c28)))) (or (not (and (and a27 b27) (not c27))) (and (and a28 b28) c28))) (or (not (and (and a27 b27) c27)) (and (and (not a28) (not b28)) (not c28)))))
(assert-soft O_t27)
(define-fun O_t28() Bool(and (and (and (and (and (and (and (and (and (not INITIAL29) (or (not INITIAL28) (and (and (not a28) (not b28)) (not c28)))) (or (not (and (and (not a28) (not b28)) (not c28))) (and (and (not a29) (not b29)) c29))) (or (not (and (and (not a28) (not b28)) c28)) (and (and (not a29) b29) (not c29)))) (or (not (and (and (not a28) b28) (not c28))) (and (and (not a29) b29) c29))) (or (not (and (and (not a28) b28) c28)) (and (and a29 (not b29)) (not c29)))) (or (not (and (and a28 (not b28)) (not c28))) (and (and a29 (not b29)) c29))) (or (not (and (and a28 (not b28)) c28)) (and (and a29 b29) (not c29)))) (or (not (and (and a28 b28) (not c28))) (and (and a29 b29) c29))) (or (not (and (and a28 b28) c28)) (and (and (not a29) (not b29)) (not c29)))))
(assert-soft O_t28)
(define-fun O_t29() Bool(and (and (and (and (and (and (and (and (and (not INITIAL30) (or (not INITIAL29) (and (and (not a29) (not b29)) (not c29)))) (or (not (and (and (not a29) (not b29)) (not c29))) (and (and (not a30) (not b30)) c30))) (or (not (and (and (not a29) (not b29)) c29)) (and (and (not a30) b30) (not c30)))) (or (not (and (and (not a29) b29) (not c29))) (and (and (not a30) b30) c30))) (or (not (and (and (not a29) b29) c29)) (and (and a30 (not b30)) (not c30)))) (or (not (and (and a29 (not b29)) (not c29))) (and (and a30 (not b30)) c30))) (or (not (and (and a29 (not b29)) c29)) (and (and a30 b30) (not c30)))) (or (not (and (and a29 b29) (not c29))) (and (and a30 b30) c30))) (or (not (and (and a29 b29) c29)) (and (and (not a30) (not b30)) (not c30)))))
(assert-soft O_t29)
(define-fun O_t30() Bool(and (and (and (and (and (and (and (and (and (not INITIAL31) (or (not INITIAL30) (and (and (not a30) (not b30)) (not c30)))) (or (not (and (and (not a30) (not b30)) (not c30))) (and (and (not a31) (not b31)) c31))) (or (not (and (and (not a30) (not b30)) c30)) (and (and (not a31) b31) (not c31)))) (or (not (and (and (not a30) b30) (not c30))) (and (and (not a31) b31) c31))) (or (not (and (and (not a30) b30) c30)) (and (and a31 (not b31)) (not c31)))) (or (not (and (and a30 (not b30)) (not c30))) (and (and a31 (not b31)) c31))) (or (not (and (and a30 (not b30)) c30)) (and (and a31 b31) (not c31)))) (or (not (and (and a30 b30) (not c30))) (and (and a31 b31) c31))) (or (not (and (and a30 b30) c30)) (and (and (not a31) (not b31)) (not c31)))))
(assert-soft O_t30)
(define-fun O_t31() Bool(and (and (and (and (and (and (and (and (and (not INITIAL32) (or (not INITIAL31) (and (and (not a31) (not b31)) (not c31)))) (or (not (and (and (not a31) (not b31)) (not c31))) (and (and (not a32) (not b32)) c32))) (or (not (and (and (not a31) (not b31)) c31)) (and (and (not a32) b32) (not c32)))) (or (not (and (and (not a31) b31) (not c31))) (and (and (not a32) b32) c32))) (or (not (and (and (not a31) b31) c31)) (and (and a32 (not b32)) (not c32)))) (or (not (and (and a31 (not b31)) (not c31))) (and (and a32 (not b32)) c32))) (or (not (and (and a31 (not b31)) c31)) (and (and a32 b32) (not c32)))) (or (not (and (and a31 b31) (not c31))) (and (and a32 b32) c32))) (or (not (and (and a31 b31) c31)) (and (and (not a32) (not b32)) (not c32)))))
(assert-soft O_t31)
(define-fun O_t32() Bool(and (and (and (and (and (and (and (and (and (not INITIAL33) (or (not INITIAL32) (and (and (not a32) (not b32)) (not c32)))) (or (not (and (and (not a32) (not b32)) (not c32))) (and (and (not a33) (not b33)) c33))) (or (not (and (and (not a32) (not b32)) c32)) (and (and (not a33) b33) (not c33)))) (or (not (and (and (not a32) b32) (not c32))) (and (and (not a33) b33) c33))) (or (not (and (and (not a32) b32) c32)) (and (and a33 (not b33)) (not c33)))) (or (not (and (and a32 (not b32)) (not c32))) (and (and a33 (not b33)) c33))) (or (not (and (and a32 (not b32)) c32)) (and (and a33 b33) (not c33)))) (or (not (and (and a32 b32) (not c32))) (and (and a33 b33) c33))) (or (not (and (and a32 b32) c32)) (and (and (not a33) (not b33)) (not c33)))))
(assert-soft O_t32)
(define-fun O_t33() Bool(and (and (and (and (and (and (and (and (and (not INITIAL34) (or (not INITIAL33) (and (and (not a33) (not b33)) (not c33)))) (or (not (and (and (not a33) (not b33)) (not c33))) (and (and (not a34) (not b34)) c34))) (or (not (and (and (not a33) (not b33)) c33)) (and (and (not a34) b34) (not c34)))) (or (not (and (and (not a33) b33) (not c33))) (and (and (not a34) b34) c34))) (or (not (and (and (not a33) b33) c33)) (and (and a34 (not b34)) (not c34)))) (or (not (and (and a33 (not b33)) (not c33))) (and (and a34 (not b34)) c34))) (or (not (and (and a33 (not b33)) c33)) (and (and a34 b34) (not c34)))) (or (not (and (and a33 b33) (not c33))) (and (and a34 b34) c34))) (or (not (and (and a33 b33) c33)) (and (and (not a34) (not b34)) (not c34)))))
(assert-soft O_t33)
(define-fun O_t34() Bool(and (and (and (and (and (and (and (and (and (not INITIAL35) (or (not INITIAL34) (and (and (not a34) (not b34)) (not c34)))) (or (not (and (and (not a34) (not b34)) (not c34))) (and (and (not a35) (not b35)) c35))) (or (not (and (and (not a34) (not b34)) c34)) (and (and (not a35) b35) (not c35)))) (or (not (and (and (not a34) b34) (not c34))) (and (and (not a35) b35) c35))) (or (not (and (and (not a34) b34) c34)) (and (and a35 (not b35)) (not c35)))) (or (not (and (and a34 (not b34)) (not c34))) (and (and a35 (not b35)) c35))) (or (not (and (and a34 (not b34)) c34)) (and (and a35 b35) (not c35)))) (or (not (and (and a34 b34) (not c34))) (and (and a35 b35) c35))) (or (not (and (and a34 b34) c34)) (and (and (not a35) (not b35)) (not c35)))))
(assert-soft O_t34)
(define-fun O_t35() Bool(and (and (and (and (and (and (and (and (and (not INITIAL36) (or (not INITIAL35) (and (and (not a35) (not b35)) (not c35)))) (or (not (and (and (not a35) (not b35)) (not c35))) (and (and (not a36) (not b36)) c36))) (or (not (and (and (not a35) (not b35)) c35)) (and (and (not a36) b36) (not c36)))) (or (not (and (and (not a35) b35) (not c35))) (and (and (not a36) b36) c36))) (or (not (and (and (not a35) b35) c35)) (and (and a36 (not b36)) (not c36)))) (or (not (and (and a35 (not b35)) (not c35))) (and (and a36 (not b36)) c36))) (or (not (and (and a35 (not b35)) c35)) (and (and a36 b36) (not c36)))) (or (not (and (and a35 b35) (not c35))) (and (and a36 b36) c36))) (or (not (and (and a35 b35) c35)) (and (and (not a36) (not b36)) (not c36)))))
(assert-soft O_t35)
(define-fun O_t36() Bool(and (and (and (and (and (and (and (and (and (not INITIAL37) (or (not INITIAL36) (and (and (not a36) (not b36)) (not c36)))) (or (not (and (and (not a36) (not b36)) (not c36))) (and (and (not a37) (not b37)) c37))) (or (not (and (and (not a36) (not b36)) c36)) (and (and (not a37) b37) (not c37)))) (or (not (and (and (not a36) b36) (not c36))) (and (and (not a37) b37) c37))) (or (not (and (and (not a36) b36) c36)) (and (and a37 (not b37)) (not c37)))) (or (not (and (and a36 (not b36)) (not c36))) (and (and a37 (not b37)) c37))) (or (not (and (and a36 (not b36)) c36)) (and (and a37 b37) (not c37)))) (or (not (and (and a36 b36) (not c36))) (and (and a37 b37) c37))) (or (not (and (and a36 b36) c36)) (and (and (not a37) (not b37)) (not c37)))))
(assert-soft O_t36)
(define-fun O_t37() Bool(and (and (and (and (and (and (and (and (and (not INITIAL38) (or (not INITIAL37) (and (and (not a37) (not b37)) (not c37)))) (or (not (and (and (not a37) (not b37)) (not c37))) (and (and (not a38) (not b38)) c38))) (or (not (and (and (not a37) (not b37)) c37)) (and (and (not a38) b38) (not c38)))) (or (not (and (and (not a37) b37) (not c37))) (and (and (not a38) b38) c38))) (or (not (and (and (not a37) b37) c37)) (and (and a38 (not b38)) (not c38)))) (or (not (and (and a37 (not b37)) (not c37))) (and (and a38 (not b38)) c38))) (or (not (and (and a37 (not b37)) c37)) (and (and a38 b38) (not c38)))) (or (not (and (and a37 b37) (not c37))) (and (and a38 b38) c38))) (or (not (and (and a37 b37) c37)) (and (and (not a38) (not b38)) (not c38)))))
(assert-soft O_t37)
(define-fun O_t38() Bool(and (and (and (and (and (and (and (and (and (not INITIAL39) (or (not INITIAL38) (and (and (not a38) (not b38)) (not c38)))) (or (not (and (and (not a38) (not b38)) (not c38))) (and (and (not a39) (not b39)) c39))) (or (not (and (and (not a38) (not b38)) c38)) (and (and (not a39) b39) (not c39)))) (or (not (and (and (not a38) b38) (not c38))) (and (and (not a39) b39) c39))) (or (not (and (and (not a38) b38) c38)) (and (and a39 (not b39)) (not c39)))) (or (not (and (and a38 (not b38)) (not c38))) (and (and a39 (not b39)) c39))) (or (not (and (and a38 (not b38)) c38)) (and (and a39 b39) (not c39)))) (or (not (and (and a38 b38) (not c38))) (and (and a39 b39) c39))) (or (not (and (and a38 b38) c38)) (and (and (not a39) (not b39)) (not c39)))))
(assert-soft O_t38)
(define-fun O_t39() Bool(and (and (and (and (and (and (and (and (and (not INITIAL40) (or (not INITIAL39) (and (and (not a39) (not b39)) (not c39)))) (or (not (and (and (not a39) (not b39)) (not c39))) (and (and (not a40) (not b40)) c40))) (or (not (and (and (not a39) (not b39)) c39)) (and (and (not a40) b40) (not c40)))) (or (not (and (and (not a39) b39) (not c39))) (and (and (not a40) b40) c40))) (or (not (and (and (not a39) b39) c39)) (and (and a40 (not b40)) (not c40)))) (or (not (and (and a39 (not b39)) (not c39))) (and (and a40 (not b40)) c40))) (or (not (and (and a39 (not b39)) c39)) (and (and a40 b40) (not c40)))) (or (not (and (and a39 b39) (not c39))) (and (and a40 b40) c40))) (or (not (and (and a39 b39) c39)) (and (and (not a40) (not b40)) (not c40)))))
(assert-soft O_t39)
(define-fun O_t40() Bool(and (and (and (and (and (and (and (and (and (not INITIAL41) (or (not INITIAL40) (and (and (not a40) (not b40)) (not c40)))) (or (not (and (and (not a40) (not b40)) (not c40))) (and (and (not a41) (not b41)) c41))) (or (not (and (and (not a40) (not b40)) c40)) (and (and (not a41) b41) (not c41)))) (or (not (and (and (not a40) b40) (not c40))) (and (and (not a41) b41) c41))) (or (not (and (and (not a40) b40) c40)) (and (and a41 (not b41)) (not c41)))) (or (not (and (and a40 (not b40)) (not c40))) (and (and a41 (not b41)) c41))) (or (not (and (and a40 (not b40)) c40)) (and (and a41 b41) (not c41)))) (or (not (and (and a40 b40) (not c40))) (and (and a41 b41) c41))) (or (not (and (and a40 b40) c40)) (and (and (not a41) (not b41)) (not c41)))))
(assert-soft O_t40)
(define-fun O_t41() Bool(and (and (and (and (and (and (and (and (and (not INITIAL42) (or (not INITIAL41) (and (and (not a41) (not b41)) (not c41)))) (or (not (and (and (not a41) (not b41)) (not c41))) (and (and (not a42) (not b42)) c42))) (or (not (and (and (not a41) (not b41)) c41)) (and (and (not a42) b42) (not c42)))) (or (not (and (and (not a41) b41) (not c41))) (and (and (not a42) b42) c42))) (or (not (and (and (not a41) b41) c41)) (and (and a42 (not b42)) (not c42)))) (or (not (and (and a41 (not b41)) (not c41))) (and (and a42 (not b42)) c42))) (or (not (and (and a41 (not b41)) c41)) (and (and a42 b42) (not c42)))) (or (not (and (and a41 b41) (not c41))) (and (and a42 b42) c42))) (or (not (and (and a41 b41) c41)) (and (and (not a42) (not b42)) (not c42)))))
(assert-soft O_t41)
(define-fun O_t42() Bool(and (and (and (and (and (and (and (and (and (not INITIAL43) (or (not INITIAL42) (and (and (not a42) (not b42)) (not c42)))) (or (not (and (and (not a42) (not b42)) (not c42))) (and (and (not a43) (not b43)) c43))) (or (not (and (and (not a42) (not b42)) c42)) (and (and (not a43) b43) (not c43)))) (or (not (and (and (not a42) b42) (not c42))) (and (and (not a43) b43) c43))) (or (not (and (and (not a42) b42) c42)) (and (and a43 (not b43)) (not c43)))) (or (not (and (and a42 (not b42)) (not c42))) (and (and a43 (not b43)) c43))) (or (not (and (and a42 (not b42)) c42)) (and (and a43 b43) (not c43)))) (or (not (and (and a42 b42) (not c42))) (and (and a43 b43) c43))) (or (not (and (and a42 b42) c42)) (and (and (not a43) (not b43)) (not c43)))))
(assert-soft O_t42)
(define-fun O_t43() Bool(and (and (and (and (and (and (and (and (and (not INITIAL44) (or (not INITIAL43) (and (and (not a43) (not b43)) (not c43)))) (or (not (and (and (not a43) (not b43)) (not c43))) (and (and (not a44) (not b44)) c44))) (or (not (and (and (not a43) (not b43)) c43)) (and (and (not a44) b44) (not c44)))) (or (not (and (and (not a43) b43) (not c43))) (and (and (not a44) b44) c44))) (or (not (and (and (not a43) b43) c43)) (and (and a44 (not b44)) (not c44)))) (or (not (and (and a43 (not b43)) (not c43))) (and (and a44 (not b44)) c44))) (or (not (and (and a43 (not b43)) c43)) (and (and a44 b44) (not c44)))) (or (not (and (and a43 b43) (not c43))) (and (and a44 b44) c44))) (or (not (and (and a43 b43) c43)) (and (and (not a44) (not b44)) (not c44)))))
(assert-soft O_t43)
(define-fun O_t44() Bool(and (and (and (and (and (and (and (and (and (not INITIAL45) (or (not INITIAL44) (and (and (not a44) (not b44)) (not c44)))) (or (not (and (and (not a44) (not b44)) (not c44))) (and (and (not a45) (not b45)) c45))) (or (not (and (and (not a44) (not b44)) c44)) (and (and (not a45) b45) (not c45)))) (or (not (and (and (not a44) b44) (not c44))) (and (and (not a45) b45) c45))) (or (not (and (and (not a44) b44) c44)) (and (and a45 (not b45)) (not c45)))) (or (not (and (and a44 (not b44)) (not c44))) (and (and a45 (not b45)) c45))) (or (not (and (and a44 (not b44)) c44)) (and (and a45 b45) (not c45)))) (or (not (and (and a44 b44) (not c44))) (and (and a45 b45) c45))) (or (not (and (and a44 b44) c44)) (and (and (not a45) (not b45)) (not c45)))))
(assert-soft O_t44)
(define-fun O_t45() Bool(and (and (and (and (and (and (and (and (and (not INITIAL46) (or (not INITIAL45) (and (and (not a45) (not b45)) (not c45)))) (or (not (and (and (not a45) (not b45)) (not c45))) (and (and (not a46) (not b46)) c46))) (or (not (and (and (not a45) (not b45)) c45)) (and (and (not a46) b46) (not c46)))) (or (not (and (and (not a45) b45) (not c45))) (and (and (not a46) b46) c46))) (or (not (and (and (not a45) b45) c45)) (and (and a46 (not b46)) (not c46)))) (or (not (and (and a45 (not b45)) (not c45))) (and (and a46 (not b46)) c46))) (or (not (and (and a45 (not b45)) c45)) (and (and a46 b46) (not c46)))) (or (not (and (and a45 b45) (not c45))) (and (and a46 b46) c46))) (or (not (and (and a45 b45) c45)) (and (and (not a46) (not b46)) (not c46)))))
(assert-soft O_t45)
(define-fun O_t46() Bool(and (and (and (and (and (and (and (and (and (not INITIAL47) (or (not INITIAL46) (and (and (not a46) (not b46)) (not c46)))) (or (not (and (and (not a46) (not b46)) (not c46))) (and (and (not a47) (not b47)) c47))) (or (not (and (and (not a46) (not b46)) c46)) (and (and (not a47) b47) (not c47)))) (or (not (and (and (not a46) b46) (not c46))) (and (and (not a47) b47) c47))) (or (not (and (and (not a46) b46) c46)) (and (and a47 (not b47)) (not c47)))) (or (not (and (and a46 (not b46)) (not c46))) (and (and a47 (not b47)) c47))) (or (not (and (and a46 (not b46)) c46)) (and (and a47 b47) (not c47)))) (or (not (and (and a46 b46) (not c46))) (and (and a47 b47) c47))) (or (not (and (and a46 b46) c46)) (and (and (not a47) (not b47)) (not c47)))))
(assert-soft O_t46)
(define-fun O_t47() Bool(and (and (and (and (and (and (and (and (and (not INITIAL48) (or (not INITIAL47) (and (and (not a47) (not b47)) (not c47)))) (or (not (and (and (not a47) (not b47)) (not c47))) (and (and (not a48) (not b48)) c48))) (or (not (and (and (not a47) (not b47)) c47)) (and (and (not a48) b48) (not c48)))) (or (not (and (and (not a47) b47) (not c47))) (and (and (not a48) b48) c48))) (or (not (and (and (not a47) b47) c47)) (and (and a48 (not b48)) (not c48)))) (or (not (and (and a47 (not b47)) (not c47))) (and (and a48 (not b48)) c48))) (or (not (and (and a47 (not b47)) c47)) (and (and a48 b48) (not c48)))) (or (not (and (and a47 b47) (not c47))) (and (and a48 b48) c48))) (or (not (and (and a47 b47) c47)) (and (and (not a48) (not b48)) (not c48)))))
(assert-soft O_t47)
(define-fun O_t48() Bool(and (and (and (and (and (and (and (and (and (not INITIAL49) (or (not INITIAL48) (and (and (not a48) (not b48)) (not c48)))) (or (not (and (and (not a48) (not b48)) (not c48))) (and (and (not a49) (not b49)) c49))) (or (not (and (and (not a48) (not b48)) c48)) (and (and (not a49) b49) (not c49)))) (or (not (and (and (not a48) b48) (not c48))) (and (and (not a49) b49) c49))) (or (not (and (and (not a48) b48) c48)) (and (and a49 (not b49)) (not c49)))) (or (not (and (and a48 (not b48)) (not c48))) (and (and a49 (not b49)) c49))) (or (not (and (and a48 (not b48)) c48)) (and (and a49 b49) (not c49)))) (or (not (and (and a48 b48) (not c48))) (and (and a49 b49) c49))) (or (not (and (and a48 b48) c48)) (and (and (not a49) (not b49)) (not c49)))))
(assert-soft O_t48)
(define-fun O_t49() Bool(and (and (and (and (and (and (and (and (and (not INITIAL50) (or (not INITIAL49) (and (and (not a49) (not b49)) (not c49)))) (or (not (and (and (not a49) (not b49)) (not c49))) (and (and (not a50) (not b50)) c50))) (or (not (and (and (not a49) (not b49)) c49)) (and (and (not a50) b50) (not c50)))) (or (not (and (and (not a49) b49) (not c49))) (and (and (not a50) b50) c50))) (or (not (and (and (not a49) b49) c49)) (and (and a50 (not b50)) (not c50)))) (or (not (and (and a49 (not b49)) (not c49))) (and (and a50 (not b50)) c50))) (or (not (and (and a49 (not b49)) c49)) (and (and a50 b50) (not c50)))) (or (not (and (and a49 b49) (not c49))) (and (and a50 b50) c50))) (or (not (and (and a49 b49) c49)) (and (and (not a50) (not b50)) (not c50)))))
(assert-soft O_t49)
(define-fun O_t50() Bool(and (and (and (and (and (and (and (and (and (not INITIAL51) (or (not INITIAL50) (and (and (not a50) (not b50)) (not c50)))) (or (not (and (and (not a50) (not b50)) (not c50))) (and (and (not a51) (not b51)) c51))) (or (not (and (and (not a50) (not b50)) c50)) (and (and (not a51) b51) (not c51)))) (or (not (and (and (not a50) b50) (not c50))) (and (and (not a51) b51) c51))) (or (not (and (and (not a50) b50) c50)) (and (and a51 (not b51)) (not c51)))) (or (not (and (and a50 (not b50)) (not c50))) (and (and a51 (not b51)) c51))) (or (not (and (and a50 (not b50)) c50)) (and (and a51 b51) (not c51)))) (or (not (and (and a50 b50) (not c50))) (and (and a51 b51) c51))) (or (not (and (and a50 b50) c50)) (and (and (not a51) (not b51)) (not c51)))))
(assert-soft O_t50)
(define-fun O_t51() Bool(and (and (and (and (and (and (and (and (and (not INITIAL52) (or (not INITIAL51) (and (and (not a51) (not b51)) (not c51)))) (or (not (and (and (not a51) (not b51)) (not c51))) (and (and (not a52) (not b52)) c52))) (or (not (and (and (not a51) (not b51)) c51)) (and (and (not a52) b52) (not c52)))) (or (not (and (and (not a51) b51) (not c51))) (and (and (not a52) b52) c52))) (or (not (and (and (not a51) b51) c51)) (and (and a52 (not b52)) (not c52)))) (or (not (and (and a51 (not b51)) (not c51))) (and (and a52 (not b52)) c52))) (or (not (and (and a51 (not b51)) c51)) (and (and a52 b52) (not c52)))) (or (not (and (and a51 b51) (not c51))) (and (and a52 b52) c52))) (or (not (and (and a51 b51) c51)) (and (and (not a52) (not b52)) (not c52)))))
(assert-soft O_t51)
(define-fun O_t52() Bool(and (and (and (and (and (and (and (and (and (not INITIAL53) (or (not INITIAL52) (and (and (not a52) (not b52)) (not c52)))) (or (not (and (and (not a52) (not b52)) (not c52))) (and (and (not a53) (not b53)) c53))) (or (not (and (and (not a52) (not b52)) c52)) (and (and (not a53) b53) (not c53)))) (or (not (and (and (not a52) b52) (not c52))) (and (and (not a53) b53) c53))) (or (not (and (and (not a52) b52) c52)) (and (and a53 (not b53)) (not c53)))) (or (not (and (and a52 (not b52)) (not c52))) (and (and a53 (not b53)) c53))) (or (not (and (and a52 (not b52)) c52)) (and (and a53 b53) (not c53)))) (or (not (and (and a52 b52) (not c52))) (and (and a53 b53) c53))) (or (not (and (and a52 b52) c52)) (and (and (not a53) (not b53)) (not c53)))))
(assert-soft O_t52)
(define-fun O_t53() Bool(and (and (and (and (and (and (and (and (and (not INITIAL54) (or (not INITIAL53) (and (and (not a53) (not b53)) (not c53)))) (or (not (and (and (not a53) (not b53)) (not c53))) (and (and (not a54) (not b54)) c54))) (or (not (and (and (not a53) (not b53)) c53)) (and (and (not a54) b54) (not c54)))) (or (not (and (and (not a53) b53) (not c53))) (and (and (not a54) b54) c54))) (or (not (and (and (not a53) b53) c53)) (and (and a54 (not b54)) (not c54)))) (or (not (and (and a53 (not b53)) (not c53))) (and (and a54 (not b54)) c54))) (or (not (and (and a53 (not b53)) c53)) (and (and a54 b54) (not c54)))) (or (not (and (and a53 b53) (not c53))) (and (and a54 b54) c54))) (or (not (and (and a53 b53) c53)) (and (and (not a54) (not b54)) (not c54)))))
(assert-soft O_t53)
(define-fun O_t54() Bool(and (and (and (and (and (and (and (and (and (not INITIAL55) (or (not INITIAL54) (and (and (not a54) (not b54)) (not c54)))) (or (not (and (and (not a54) (not b54)) (not c54))) (and (and (not a55) (not b55)) c55))) (or (not (and (and (not a54) (not b54)) c54)) (and (and (not a55) b55) (not c55)))) (or (not (and (and (not a54) b54) (not c54))) (and (and (not a55) b55) c55))) (or (not (and (and (not a54) b54) c54)) (and (and a55 (not b55)) (not c55)))) (or (not (and (and a54 (not b54)) (not c54))) (and (and a55 (not b55)) c55))) (or (not (and (and a54 (not b54)) c54)) (and (and a55 b55) (not c55)))) (or (not (and (and a54 b54) (not c54))) (and (and a55 b55) c55))) (or (not (and (and a54 b54) c54)) (and (and (not a55) (not b55)) (not c55)))))
(assert-soft O_t54)
(define-fun O_t55() Bool(and (and (and (and (and (and (and (and (and (not INITIAL56) (or (not INITIAL55) (and (and (not a55) (not b55)) (not c55)))) (or (not (and (and (not a55) (not b55)) (not c55))) (and (and (not a56) (not b56)) c56))) (or (not (and (and (not a55) (not b55)) c55)) (and (and (not a56) b56) (not c56)))) (or (not (and (and (not a55) b55) (not c55))) (and (and (not a56) b56) c56))) (or (not (and (and (not a55) b55) c55)) (and (and a56 (not b56)) (not c56)))) (or (not (and (and a55 (not b55)) (not c55))) (and (and a56 (not b56)) c56))) (or (not (and (and a55 (not b55)) c55)) (and (and a56 b56) (not c56)))) (or (not (and (and a55 b55) (not c55))) (and (and a56 b56) c56))) (or (not (and (and a55 b55) c55)) (and (and (not a56) (not b56)) (not c56)))))
(assert-soft O_t55)
(define-fun O_t56() Bool(and (and (and (and (and (and (and (and (and (not INITIAL57) (or (not INITIAL56) (and (and (not a56) (not b56)) (not c56)))) (or (not (and (and (not a56) (not b56)) (not c56))) (and (and (not a57) (not b57)) c57))) (or (not (and (and (not a56) (not b56)) c56)) (and (and (not a57) b57) (not c57)))) (or (not (and (and (not a56) b56) (not c56))) (and (and (not a57) b57) c57))) (or (not (and (and (not a56) b56) c56)) (and (and a57 (not b57)) (not c57)))) (or (not (and (and a56 (not b56)) (not c56))) (and (and a57 (not b57)) c57))) (or (not (and (and a56 (not b56)) c56)) (and (and a57 b57) (not c57)))) (or (not (and (and a56 b56) (not c56))) (and (and a57 b57) c57))) (or (not (and (and a56 b56) c56)) (and (and (not a57) (not b57)) (not c57)))))
(assert-soft O_t56)
(define-fun O_t57() Bool(and (and (and (and (and (and (and (and (and (not INITIAL58) (or (not INITIAL57) (and (and (not a57) (not b57)) (not c57)))) (or (not (and (and (not a57) (not b57)) (not c57))) (and (and (not a58) (not b58)) c58))) (or (not (and (and (not a57) (not b57)) c57)) (and (and (not a58) b58) (not c58)))) (or (not (and (and (not a57) b57) (not c57))) (and (and (not a58) b58) c58))) (or (not (and (and (not a57) b57) c57)) (and (and a58 (not b58)) (not c58)))) (or (not (and (and a57 (not b57)) (not c57))) (and (and a58 (not b58)) c58))) (or (not (and (and a57 (not b57)) c57)) (and (and a58 b58) (not c58)))) (or (not (and (and a57 b57) (not c57))) (and (and a58 b58) c58))) (or (not (and (and a57 b57) c57)) (and (and (not a58) (not b58)) (not c58)))))
(assert-soft O_t57)
(define-fun O_t58() Bool(and (and (and (and (and (and (and (and (and (not INITIAL59) (or (not INITIAL58) (and (and (not a58) (not b58)) (not c58)))) (or (not (and (and (not a58) (not b58)) (not c58))) (and (and (not a59) (not b59)) c59))) (or (not (and (and (not a58) (not b58)) c58)) (and (and (not a59) b59) (not c59)))) (or (not (and (and (not a58) b58) (not c58))) (and (and (not a59) b59) c59))) (or (not (and (and (not a58) b58) c58)) (and (and a59 (not b59)) (not c59)))) (or (not (and (and a58 (not b58)) (not c58))) (and (and a59 (not b59)) c59))) (or (not (and (and a58 (not b58)) c58)) (and (and a59 b59) (not c59)))) (or (not (and (and a58 b58) (not c58))) (and (and a59 b59) c59))) (or (not (and (and a58 b58) c58)) (and (and (not a59) (not b59)) (not c59)))))
(assert-soft O_t58)
(define-fun O_t59() Bool(and (and (and (and (and (and (and (and (and (not INITIAL60) (or (not INITIAL59) (and (and (not a59) (not b59)) (not c59)))) (or (not (and (and (not a59) (not b59)) (not c59))) (and (and (not a60) (not b60)) c60))) (or (not (and (and (not a59) (not b59)) c59)) (and (and (not a60) b60) (not c60)))) (or (not (and (and (not a59) b59) (not c59))) (and (and (not a60) b60) c60))) (or (not (and (and (not a59) b59) c59)) (and (and a60 (not b60)) (not c60)))) (or (not (and (and a59 (not b59)) (not c59))) (and (and a60 (not b60)) c60))) (or (not (and (and a59 (not b59)) c59)) (and (and a60 b60) (not c60)))) (or (not (and (and a59 b59) (not c59))) (and (and a60 b60) c60))) (or (not (and (and a59 b59) c59)) (and (and (not a60) (not b60)) (not c60)))))
(assert-soft O_t59)
(define-fun O_t60() Bool(and (and (and (and (and (and (and (and (and (not INITIAL61) (or (not INITIAL60) (and (and (not a60) (not b60)) (not c60)))) (or (not (and (and (not a60) (not b60)) (not c60))) (and (and (not a61) (not b61)) c61))) (or (not (and (and (not a60) (not b60)) c60)) (and (and (not a61) b61) (not c61)))) (or (not (and (and (not a60) b60) (not c60))) (and (and (not a61) b61) c61))) (or (not (and (and (not a60) b60) c60)) (and (and a61 (not b61)) (not c61)))) (or (not (and (and a60 (not b60)) (not c60))) (and (and a61 (not b61)) c61))) (or (not (and (and a60 (not b60)) c60)) (and (and a61 b61) (not c61)))) (or (not (and (and a60 b60) (not c60))) (and (and a61 b61) c61))) (or (not (and (and a60 b60) c60)) (and (and (not a61) (not b61)) (not c61)))))
(assert-soft O_t60)
(define-fun O_t61() Bool(and (and (and (and (and (and (and (and (and (not INITIAL62) (or (not INITIAL61) (and (and (not a61) (not b61)) (not c61)))) (or (not (and (and (not a61) (not b61)) (not c61))) (and (and (not a62) (not b62)) c62))) (or (not (and (and (not a61) (not b61)) c61)) (and (and (not a62) b62) (not c62)))) (or (not (and (and (not a61) b61) (not c61))) (and (and (not a62) b62) c62))) (or (not (and (and (not a61) b61) c61)) (and (and a62 (not b62)) (not c62)))) (or (not (and (and a61 (not b61)) (not c61))) (and (and a62 (not b62)) c62))) (or (not (and (and a61 (not b61)) c61)) (and (and a62 b62) (not c62)))) (or (not (and (and a61 b61) (not c61))) (and (and a62 b62) c62))) (or (not (and (and a61 b61) c61)) (and (and (not a62) (not b62)) (not c62)))))
(assert-soft O_t61)
(define-fun O_t62() Bool(and (and (and (and (and (and (and (and (and (not INITIAL63) (or (not INITIAL62) (and (and (not a62) (not b62)) (not c62)))) (or (not (and (and (not a62) (not b62)) (not c62))) (and (and (not a63) (not b63)) c63))) (or (not (and (and (not a62) (not b62)) c62)) (and (and (not a63) b63) (not c63)))) (or (not (and (and (not a62) b62) (not c62))) (and (and (not a63) b63) c63))) (or (not (and (and (not a62) b62) c62)) (and (and a63 (not b63)) (not c63)))) (or (not (and (and a62 (not b62)) (not c62))) (and (and a63 (not b63)) c63))) (or (not (and (and a62 (not b62)) c62)) (and (and a63 b63) (not c63)))) (or (not (and (and a62 b62) (not c62))) (and (and a63 b63) c63))) (or (not (and (and a62 b62) c62)) (and (and (not a63) (not b63)) (not c63)))))
(assert-soft O_t62)
(define-fun O_t63() Bool(and (and (and (and (and (and (and (and (and (not INITIAL64) (or (not INITIAL63) (and (and (not a63) (not b63)) (not c63)))) (or (not (and (and (not a63) (not b63)) (not c63))) (and (and (not a64) (not b64)) c64))) (or (not (and (and (not a63) (not b63)) c63)) (and (and (not a64) b64) (not c64)))) (or (not (and (and (not a63) b63) (not c63))) (and (and (not a64) b64) c64))) (or (not (and (and (not a63) b63) c63)) (and (and a64 (not b64)) (not c64)))) (or (not (and (and a63 (not b63)) (not c63))) (and (and a64 (not b64)) c64))) (or (not (and (and a63 (not b63)) c63)) (and (and a64 b64) (not c64)))) (or (not (and (and a63 b63) (not c63))) (and (and a64 b64) c64))) (or (not (and (and a63 b63) c63)) (and (and (not a64) (not b64)) (not c64)))))
(assert-soft O_t63)
(define-fun O_t64() Bool(and (and (and (and (and (and (and (and (and (not INITIAL65) (or (not INITIAL64) (and (and (not a64) (not b64)) (not c64)))) (or (not (and (and (not a64) (not b64)) (not c64))) (and (and (not a65) (not b65)) c65))) (or (not (and (and (not a64) (not b64)) c64)) (and (and (not a65) b65) (not c65)))) (or (not (and (and (not a64) b64) (not c64))) (and (and (not a65) b65) c65))) (or (not (and (and (not a64) b64) c64)) (and (and a65 (not b65)) (not c65)))) (or (not (and (and a64 (not b64)) (not c64))) (and (and a65 (not b65)) c65))) (or (not (and (and a64 (not b64)) c64)) (and (and a65 b65) (not c65)))) (or (not (and (and a64 b64) (not c64))) (and (and a65 b65) c65))) (or (not (and (and a64 b64) c64)) (and (and (not a65) (not b65)) (not c65)))))
(assert-soft O_t64)
(define-fun O_t65() Bool(and (and (and (and (and (and (and (and (and (not INITIAL66) (or (not INITIAL65) (and (and (not a65) (not b65)) (not c65)))) (or (not (and (and (not a65) (not b65)) (not c65))) (and (and (not a66) (not b66)) c66))) (or (not (and (and (not a65) (not b65)) c65)) (and (and (not a66) b66) (not c66)))) (or (not (and (and (not a65) b65) (not c65))) (and (and (not a66) b66) c66))) (or (not (and (and (not a65) b65) c65)) (and (and a66 (not b66)) (not c66)))) (or (not (and (and a65 (not b65)) (not c65))) (and (and a66 (not b66)) c66))) (or (not (and (and a65 (not b65)) c65)) (and (and a66 b66) (not c66)))) (or (not (and (and a65 b65) (not c65))) (and (and a66 b66) c66))) (or (not (and (and a65 b65) c65)) (and (and (not a66) (not b66)) (not c66)))))
(assert-soft O_t65)
(define-fun O_t66() Bool(and (and (and (and (and (and (and (and (and (not INITIAL67) (or (not INITIAL66) (and (and (not a66) (not b66)) (not c66)))) (or (not (and (and (not a66) (not b66)) (not c66))) (and (and (not a67) (not b67)) c67))) (or (not (and (and (not a66) (not b66)) c66)) (and (and (not a67) b67) (not c67)))) (or (not (and (and (not a66) b66) (not c66))) (and (and (not a67) b67) c67))) (or (not (and (and (not a66) b66) c66)) (and (and a67 (not b67)) (not c67)))) (or (not (and (and a66 (not b66)) (not c66))) (and (and a67 (not b67)) c67))) (or (not (and (and a66 (not b66)) c66)) (and (and a67 b67) (not c67)))) (or (not (and (and a66 b66) (not c66))) (and (and a67 b67) c67))) (or (not (and (and a66 b66) c66)) (and (and (not a67) (not b67)) (not c67)))))
(assert-soft O_t66)
(define-fun O_t67() Bool(and (and (and (and (and (and (and (and (and (not INITIAL68) (or (not INITIAL67) (and (and (not a67) (not b67)) (not c67)))) (or (not (and (and (not a67) (not b67)) (not c67))) (and (and (not a68) (not b68)) c68))) (or (not (and (and (not a67) (not b67)) c67)) (and (and (not a68) b68) (not c68)))) (or (not (and (and (not a67) b67) (not c67))) (and (and (not a68) b68) c68))) (or (not (and (and (not a67) b67) c67)) (and (and a68 (not b68)) (not c68)))) (or (not (and (and a67 (not b67)) (not c67))) (and (and a68 (not b68)) c68))) (or (not (and (and a67 (not b67)) c67)) (and (and a68 b68) (not c68)))) (or (not (and (and a67 b67) (not c67))) (and (and a68 b68) c68))) (or (not (and (and a67 b67) c67)) (and (and (not a68) (not b68)) (not c68)))))
(assert-soft O_t67)
(define-fun O_t68() Bool(and (and (and (and (and (and (and (and (and (not INITIAL69) (or (not INITIAL68) (and (and (not a68) (not b68)) (not c68)))) (or (not (and (and (not a68) (not b68)) (not c68))) (and (and (not a69) (not b69)) c69))) (or (not (and (and (not a68) (not b68)) c68)) (and (and (not a69) b69) (not c69)))) (or (not (and (and (not a68) b68) (not c68))) (and (and (not a69) b69) c69))) (or (not (and (and (not a68) b68) c68)) (and (and a69 (not b69)) (not c69)))) (or (not (and (and a68 (not b68)) (not c68))) (and (and a69 (not b69)) c69))) (or (not (and (and a68 (not b68)) c68)) (and (and a69 b69) (not c69)))) (or (not (and (and a68 b68) (not c68))) (and (and a69 b69) c69))) (or (not (and (and a68 b68) c68)) (and (and (not a69) (not b69)) (not c69)))))
(assert-soft O_t68)
(define-fun O_t69() Bool(and (and (and (and (and (and (and (and (and (not INITIAL70) (or (not INITIAL69) (and (and (not a69) (not b69)) (not c69)))) (or (not (and (and (not a69) (not b69)) (not c69))) (and (and (not a70) (not b70)) c70))) (or (not (and (and (not a69) (not b69)) c69)) (and (and (not a70) b70) (not c70)))) (or (not (and (and (not a69) b69) (not c69))) (and (and (not a70) b70) c70))) (or (not (and (and (not a69) b69) c69)) (and (and a70 (not b70)) (not c70)))) (or (not (and (and a69 (not b69)) (not c69))) (and (and a70 (not b70)) c70))) (or (not (and (and a69 (not b69)) c69)) (and (and a70 b70) (not c70)))) (or (not (and (and a69 b69) (not c69))) (and (and a70 b70) c70))) (or (not (and (and a69 b69) c69)) (and (and (not a70) (not b70)) (not c70)))))
(assert-soft O_t69)
(define-fun O_t70() Bool(and (and (and (and (and (and (and (and (and (not INITIAL71) (or (not INITIAL70) (and (and (not a70) (not b70)) (not c70)))) (or (not (and (and (not a70) (not b70)) (not c70))) (and (and (not a71) (not b71)) c71))) (or (not (and (and (not a70) (not b70)) c70)) (and (and (not a71) b71) (not c71)))) (or (not (and (and (not a70) b70) (not c70))) (and (and (not a71) b71) c71))) (or (not (and (and (not a70) b70) c70)) (and (and a71 (not b71)) (not c71)))) (or (not (and (and a70 (not b70)) (not c70))) (and (and a71 (not b71)) c71))) (or (not (and (and a70 (not b70)) c70)) (and (and a71 b71) (not c71)))) (or (not (and (and a70 b70) (not c70))) (and (and a71 b71) c71))) (or (not (and (and a70 b70) c70)) (and (and (not a71) (not b71)) (not c71)))))
(assert-soft O_t70)
(define-fun O_t71() Bool(and (and (and (and (and (and (and (and (and (not INITIAL72) (or (not INITIAL71) (and (and (not a71) (not b71)) (not c71)))) (or (not (and (and (not a71) (not b71)) (not c71))) (and (and (not a72) (not b72)) c72))) (or (not (and (and (not a71) (not b71)) c71)) (and (and (not a72) b72) (not c72)))) (or (not (and (and (not a71) b71) (not c71))) (and (and (not a72) b72) c72))) (or (not (and (and (not a71) b71) c71)) (and (and a72 (not b72)) (not c72)))) (or (not (and (and a71 (not b71)) (not c71))) (and (and a72 (not b72)) c72))) (or (not (and (and a71 (not b71)) c71)) (and (and a72 b72) (not c72)))) (or (not (and (and a71 b71) (not c71))) (and (and a72 b72) c72))) (or (not (and (and a71 b71) c71)) (and (and (not a72) (not b72)) (not c72)))))
(assert-soft O_t71)
(define-fun O_t72() Bool(and (and (and (and (and (and (and (and (and (not INITIAL73) (or (not INITIAL72) (and (and (not a72) (not b72)) (not c72)))) (or (not (and (and (not a72) (not b72)) (not c72))) (and (and (not a73) (not b73)) c73))) (or (not (and (and (not a72) (not b72)) c72)) (and (and (not a73) b73) (not c73)))) (or (not (and (and (not a72) b72) (not c72))) (and (and (not a73) b73) c73))) (or (not (and (and (not a72) b72) c72)) (and (and a73 (not b73)) (not c73)))) (or (not (and (and a72 (not b72)) (not c72))) (and (and a73 (not b73)) c73))) (or (not (and (and a72 (not b72)) c72)) (and (and a73 b73) (not c73)))) (or (not (and (and a72 b72) (not c72))) (and (and a73 b73) c73))) (or (not (and (and a72 b72) c72)) (and (and (not a73) (not b73)) (not c73)))))
(assert-soft O_t72)
(define-fun O_t73() Bool(and (and (and (and (and (and (and (and (and (not INITIAL74) (or (not INITIAL73) (and (and (not a73) (not b73)) (not c73)))) (or (not (and (and (not a73) (not b73)) (not c73))) (and (and (not a74) (not b74)) c74))) (or (not (and (and (not a73) (not b73)) c73)) (and (and (not a74) b74) (not c74)))) (or (not (and (and (not a73) b73) (not c73))) (and (and (not a74) b74) c74))) (or (not (and (and (not a73) b73) c73)) (and (and a74 (not b74)) (not c74)))) (or (not (and (and a73 (not b73)) (not c73))) (and (and a74 (not b74)) c74))) (or (not (and (and a73 (not b73)) c73)) (and (and a74 b74) (not c74)))) (or (not (and (and a73 b73) (not c73))) (and (and a74 b74) c74))) (or (not (and (and a73 b73) c73)) (and (and (not a74) (not b74)) (not c74)))))
(assert-soft O_t73)
(define-fun O_t74() Bool(and (and (and (and (and (and (and (and (and (not INITIAL75) (or (not INITIAL74) (and (and (not a74) (not b74)) (not c74)))) (or (not (and (and (not a74) (not b74)) (not c74))) (and (and (not a75) (not b75)) c75))) (or (not (and (and (not a74) (not b74)) c74)) (and (and (not a75) b75) (not c75)))) (or (not (and (and (not a74) b74) (not c74))) (and (and (not a75) b75) c75))) (or (not (and (and (not a74) b74) c74)) (and (and a75 (not b75)) (not c75)))) (or (not (and (and a74 (not b74)) (not c74))) (and (and a75 (not b75)) c75))) (or (not (and (and a74 (not b74)) c74)) (and (and a75 b75) (not c75)))) (or (not (and (and a74 b74) (not c74))) (and (and a75 b75) c75))) (or (not (and (and a74 b74) c74)) (and (and (not a75) (not b75)) (not c75)))))
(assert-soft O_t74)
(define-fun O_t75() Bool(and (and (and (and (and (and (and (and (and (not INITIAL76) (or (not INITIAL75) (and (and (not a75) (not b75)) (not c75)))) (or (not (and (and (not a75) (not b75)) (not c75))) (and (and (not a76) (not b76)) c76))) (or (not (and (and (not a75) (not b75)) c75)) (and (and (not a76) b76) (not c76)))) (or (not (and (and (not a75) b75) (not c75))) (and (and (not a76) b76) c76))) (or (not (and (and (not a75) b75) c75)) (and (and a76 (not b76)) (not c76)))) (or (not (and (and a75 (not b75)) (not c75))) (and (and a76 (not b76)) c76))) (or (not (and (and a75 (not b75)) c75)) (and (and a76 b76) (not c76)))) (or (not (and (and a75 b75) (not c75))) (and (and a76 b76) c76))) (or (not (and (and a75 b75) c75)) (and (and (not a76) (not b76)) (not c76)))))
(assert-soft O_t75)
(define-fun O_t76() Bool(and (and (and (and (and (and (and (and (and (not INITIAL77) (or (not INITIAL76) (and (and (not a76) (not b76)) (not c76)))) (or (not (and (and (not a76) (not b76)) (not c76))) (and (and (not a77) (not b77)) c77))) (or (not (and (and (not a76) (not b76)) c76)) (and (and (not a77) b77) (not c77)))) (or (not (and (and (not a76) b76) (not c76))) (and (and (not a77) b77) c77))) (or (not (and (and (not a76) b76) c76)) (and (and a77 (not b77)) (not c77)))) (or (not (and (and a76 (not b76)) (not c76))) (and (and a77 (not b77)) c77))) (or (not (and (and a76 (not b76)) c76)) (and (and a77 b77) (not c77)))) (or (not (and (and a76 b76) (not c76))) (and (and a77 b77) c77))) (or (not (and (and a76 b76) c76)) (and (and (not a77) (not b77)) (not c77)))))
(assert-soft O_t76)
(define-fun O_t77() Bool(and (and (and (and (and (and (and (and (and (not INITIAL78) (or (not INITIAL77) (and (and (not a77) (not b77)) (not c77)))) (or (not (and (and (not a77) (not b77)) (not c77))) (and (and (not a78) (not b78)) c78))) (or (not (and (and (not a77) (not b77)) c77)) (and (and (not a78) b78) (not c78)))) (or (not (and (and (not a77) b77) (not c77))) (and (and (not a78) b78) c78))) (or (not (and (and (not a77) b77) c77)) (and (and a78 (not b78)) (not c78)))) (or (not (and (and a77 (not b77)) (not c77))) (and (and a78 (not b78)) c78))) (or (not (and (and a77 (not b77)) c77)) (and (and a78 b78) (not c78)))) (or (not (and (and a77 b77) (not c77))) (and (and a78 b78) c78))) (or (not (and (and a77 b77) c77)) (and (and (not a78) (not b78)) (not c78)))))
(assert-soft O_t77)
(define-fun O_t78() Bool(and (and (and (and (and (and (and (and (and (not INITIAL79) (or (not INITIAL78) (and (and (not a78) (not b78)) (not c78)))) (or (not (and (and (not a78) (not b78)) (not c78))) (and (and (not a79) (not b79)) c79))) (or (not (and (and (not a78) (not b78)) c78)) (and (and (not a79) b79) (not c79)))) (or (not (and (and (not a78) b78) (not c78))) (and (and (not a79) b79) c79))) (or (not (and (and (not a78) b78) c78)) (and (and a79 (not b79)) (not c79)))) (or (not (and (and a78 (not b78)) (not c78))) (and (and a79 (not b79)) c79))) (or (not (and (and a78 (not b78)) c78)) (and (and a79 b79) (not c79)))) (or (not (and (and a78 b78) (not c78))) (and (and a79 b79) c79))) (or (not (and (and a78 b78) c78)) (and (and (not a79) (not b79)) (not c79)))))
(assert-soft O_t78)
(define-fun O_t79() Bool(and (and (and (and (and (and (and (and (and (not INITIAL80) (or (not INITIAL79) (and (and (not a79) (not b79)) (not c79)))) (or (not (and (and (not a79) (not b79)) (not c79))) (and (and (not a80) (not b80)) c80))) (or (not (and (and (not a79) (not b79)) c79)) (and (and (not a80) b80) (not c80)))) (or (not (and (and (not a79) b79) (not c79))) (and (and (not a80) b80) c80))) (or (not (and (and (not a79) b79) c79)) (and (and a80 (not b80)) (not c80)))) (or (not (and (and a79 (not b79)) (not c79))) (and (and a80 (not b80)) c80))) (or (not (and (and a79 (not b79)) c79)) (and (and a80 b80) (not c80)))) (or (not (and (and a79 b79) (not c79))) (and (and a80 b80) c80))) (or (not (and (and a79 b79) c79)) (and (and (not a80) (not b80)) (not c80)))))
(assert-soft O_t79)
(define-fun O_t80() Bool(and (and (and (and (and (and (and (and (and (not INITIAL81) (or (not INITIAL80) (and (and (not a80) (not b80)) (not c80)))) (or (not (and (and (not a80) (not b80)) (not c80))) (and (and (not a81) (not b81)) c81))) (or (not (and (and (not a80) (not b80)) c80)) (and (and (not a81) b81) (not c81)))) (or (not (and (and (not a80) b80) (not c80))) (and (and (not a81) b81) c81))) (or (not (and (and (not a80) b80) c80)) (and (and a81 (not b81)) (not c81)))) (or (not (and (and a80 (not b80)) (not c80))) (and (and a81 (not b81)) c81))) (or (not (and (and a80 (not b80)) c80)) (and (and a81 b81) (not c81)))) (or (not (and (and a80 b80) (not c80))) (and (and a81 b81) c81))) (or (not (and (and a80 b80) c80)) (and (and (not a81) (not b81)) (not c81)))))
(assert-soft O_t80)
(define-fun O_t81() Bool(and (and (and (and (and (and (and (and (and (not INITIAL82) (or (not INITIAL81) (and (and (not a81) (not b81)) (not c81)))) (or (not (and (and (not a81) (not b81)) (not c81))) (and (and (not a82) (not b82)) c82))) (or (not (and (and (not a81) (not b81)) c81)) (and (and (not a82) b82) (not c82)))) (or (not (and (and (not a81) b81) (not c81))) (and (and (not a82) b82) c82))) (or (not (and (and (not a81) b81) c81)) (and (and a82 (not b82)) (not c82)))) (or (not (and (and a81 (not b81)) (not c81))) (and (and a82 (not b82)) c82))) (or (not (and (and a81 (not b81)) c81)) (and (and a82 b82) (not c82)))) (or (not (and (and a81 b81) (not c81))) (and (and a82 b82) c82))) (or (not (and (and a81 b81) c81)) (and (and (not a82) (not b82)) (not c82)))))
(assert-soft O_t81)
(define-fun O_t82() Bool(and (and (and (and (and (and (and (and (and (not INITIAL83) (or (not INITIAL82) (and (and (not a82) (not b82)) (not c82)))) (or (not (and (and (not a82) (not b82)) (not c82))) (and (and (not a83) (not b83)) c83))) (or (not (and (and (not a82) (not b82)) c82)) (and (and (not a83) b83) (not c83)))) (or (not (and (and (not a82) b82) (not c82))) (and (and (not a83) b83) c83))) (or (not (and (and (not a82) b82) c82)) (and (and a83 (not b83)) (not c83)))) (or (not (and (and a82 (not b82)) (not c82))) (and (and a83 (not b83)) c83))) (or (not (and (and a82 (not b82)) c82)) (and (and a83 b83) (not c83)))) (or (not (and (and a82 b82) (not c82))) (and (and a83 b83) c83))) (or (not (and (and a82 b82) c82)) (and (and (not a83) (not b83)) (not c83)))))
(assert-soft O_t82)
(define-fun O_t83() Bool(and (and (and (and (and (and (and (and (and (not INITIAL84) (or (not INITIAL83) (and (and (not a83) (not b83)) (not c83)))) (or (not (and (and (not a83) (not b83)) (not c83))) (and (and (not a84) (not b84)) c84))) (or (not (and (and (not a83) (not b83)) c83)) (and (and (not a84) b84) (not c84)))) (or (not (and (and (not a83) b83) (not c83))) (and (and (not a84) b84) c84))) (or (not (and (and (not a83) b83) c83)) (and (and a84 (not b84)) (not c84)))) (or (not (and (and a83 (not b83)) (not c83))) (and (and a84 (not b84)) c84))) (or (not (and (and a83 (not b83)) c83)) (and (and a84 b84) (not c84)))) (or (not (and (and a83 b83) (not c83))) (and (and a84 b84) c84))) (or (not (and (and a83 b83) c83)) (and (and (not a84) (not b84)) (not c84)))))
(assert-soft O_t83)
(define-fun O_t84() Bool(and (and (and (and (and (and (and (and (and (not INITIAL85) (or (not INITIAL84) (and (and (not a84) (not b84)) (not c84)))) (or (not (and (and (not a84) (not b84)) (not c84))) (and (and (not a85) (not b85)) c85))) (or (not (and (and (not a84) (not b84)) c84)) (and (and (not a85) b85) (not c85)))) (or (not (and (and (not a84) b84) (not c84))) (and (and (not a85) b85) c85))) (or (not (and (and (not a84) b84) c84)) (and (and a85 (not b85)) (not c85)))) (or (not (and (and a84 (not b84)) (not c84))) (and (and a85 (not b85)) c85))) (or (not (and (and a84 (not b84)) c84)) (and (and a85 b85) (not c85)))) (or (not (and (and a84 b84) (not c84))) (and (and a85 b85) c85))) (or (not (and (and a84 b84) c84)) (and (and (not a85) (not b85)) (not c85)))))
(assert-soft O_t84)
(define-fun O_t85() Bool(and (and (and (and (and (and (and (and (and (not INITIAL86) (or (not INITIAL85) (and (and (not a85) (not b85)) (not c85)))) (or (not (and (and (not a85) (not b85)) (not c85))) (and (and (not a86) (not b86)) c86))) (or (not (and (and (not a85) (not b85)) c85)) (and (and (not a86) b86) (not c86)))) (or (not (and (and (not a85) b85) (not c85))) (and (and (not a86) b86) c86))) (or (not (and (and (not a85) b85) c85)) (and (and a86 (not b86)) (not c86)))) (or (not (and (and a85 (not b85)) (not c85))) (and (and a86 (not b86)) c86))) (or (not (and (and a85 (not b85)) c85)) (and (and a86 b86) (not c86)))) (or (not (and (and a85 b85) (not c85))) (and (and a86 b86) c86))) (or (not (and (and a85 b85) c85)) (and (and (not a86) (not b86)) (not c86)))))
(assert-soft O_t85)
(define-fun O_t86() Bool(and (and (and (and (and (and (and (and (and (not INITIAL87) (or (not INITIAL86) (and (and (not a86) (not b86)) (not c86)))) (or (not (and (and (not a86) (not b86)) (not c86))) (and (and (not a87) (not b87)) c87))) (or (not (and (and (not a86) (not b86)) c86)) (and (and (not a87) b87) (not c87)))) (or (not (and (and (not a86) b86) (not c86))) (and (and (not a87) b87) c87))) (or (not (and (and (not a86) b86) c86)) (and (and a87 (not b87)) (not c87)))) (or (not (and (and a86 (not b86)) (not c86))) (and (and a87 (not b87)) c87))) (or (not (and (and a86 (not b86)) c86)) (and (and a87 b87) (not c87)))) (or (not (and (and a86 b86) (not c86))) (and (and a87 b87) c87))) (or (not (and (and a86 b86) c86)) (and (and (not a87) (not b87)) (not c87)))))
(assert-soft O_t86)
(define-fun O_t87() Bool(and (and (and (and (and (and (and (and (and (not INITIAL88) (or (not INITIAL87) (and (and (not a87) (not b87)) (not c87)))) (or (not (and (and (not a87) (not b87)) (not c87))) (and (and (not a88) (not b88)) c88))) (or (not (and (and (not a87) (not b87)) c87)) (and (and (not a88) b88) (not c88)))) (or (not (and (and (not a87) b87) (not c87))) (and (and (not a88) b88) c88))) (or (not (and (and (not a87) b87) c87)) (and (and a88 (not b88)) (not c88)))) (or (not (and (and a87 (not b87)) (not c87))) (and (and a88 (not b88)) c88))) (or (not (and (and a87 (not b87)) c87)) (and (and a88 b88) (not c88)))) (or (not (and (and a87 b87) (not c87))) (and (and a88 b88) c88))) (or (not (and (and a87 b87) c87)) (and (and (not a88) (not b88)) (not c88)))))
(assert-soft O_t87)
(define-fun O_t88() Bool(and (and (and (and (and (and (and (and (and (not INITIAL89) (or (not INITIAL88) (and (and (not a88) (not b88)) (not c88)))) (or (not (and (and (not a88) (not b88)) (not c88))) (and (and (not a89) (not b89)) c89))) (or (not (and (and (not a88) (not b88)) c88)) (and (and (not a89) b89) (not c89)))) (or (not (and (and (not a88) b88) (not c88))) (and (and (not a89) b89) c89))) (or (not (and (and (not a88) b88) c88)) (and (and a89 (not b89)) (not c89)))) (or (not (and (and a88 (not b88)) (not c88))) (and (and a89 (not b89)) c89))) (or (not (and (and a88 (not b88)) c88)) (and (and a89 b89) (not c89)))) (or (not (and (and a88 b88) (not c88))) (and (and a89 b89) c89))) (or (not (and (and a88 b88) c88)) (and (and (not a89) (not b89)) (not c89)))))
(assert-soft O_t88)
(define-fun O_t89() Bool(and (and (and (and (and (and (and (and (and (not INITIAL90) (or (not INITIAL89) (and (and (not a89) (not b89)) (not c89)))) (or (not (and (and (not a89) (not b89)) (not c89))) (and (and (not a90) (not b90)) c90))) (or (not (and (and (not a89) (not b89)) c89)) (and (and (not a90) b90) (not c90)))) (or (not (and (and (not a89) b89) (not c89))) (and (and (not a90) b90) c90))) (or (not (and (and (not a89) b89) c89)) (and (and a90 (not b90)) (not c90)))) (or (not (and (and a89 (not b89)) (not c89))) (and (and a90 (not b90)) c90))) (or (not (and (and a89 (not b89)) c89)) (and (and a90 b90) (not c90)))) (or (not (and (and a89 b89) (not c89))) (and (and a90 b90) c90))) (or (not (and (and a89 b89) c89)) (and (and (not a90) (not b90)) (not c90)))))
(assert-soft O_t89)
(define-fun O_t90() Bool(and (and (and (and (and (and (and (and (and (not INITIAL91) (or (not INITIAL90) (and (and (not a90) (not b90)) (not c90)))) (or (not (and (and (not a90) (not b90)) (not c90))) (and (and (not a91) (not b91)) c91))) (or (not (and (and (not a90) (not b90)) c90)) (and (and (not a91) b91) (not c91)))) (or (not (and (and (not a90) b90) (not c90))) (and (and (not a91) b91) c91))) (or (not (and (and (not a90) b90) c90)) (and (and a91 (not b91)) (not c91)))) (or (not (and (and a90 (not b90)) (not c90))) (and (and a91 (not b91)) c91))) (or (not (and (and a90 (not b90)) c90)) (and (and a91 b91) (not c91)))) (or (not (and (and a90 b90) (not c90))) (and (and a91 b91) c91))) (or (not (and (and a90 b90) c90)) (and (and (not a91) (not b91)) (not c91)))))
(assert-soft O_t90)
(define-fun O_t91() Bool(and (and (and (and (and (and (and (and (and (not INITIAL92) (or (not INITIAL91) (and (and (not a91) (not b91)) (not c91)))) (or (not (and (and (not a91) (not b91)) (not c91))) (and (and (not a92) (not b92)) c92))) (or (not (and (and (not a91) (not b91)) c91)) (and (and (not a92) b92) (not c92)))) (or (not (and (and (not a91) b91) (not c91))) (and (and (not a92) b92) c92))) (or (not (and (and (not a91) b91) c91)) (and (and a92 (not b92)) (not c92)))) (or (not (and (and a91 (not b91)) (not c91))) (and (and a92 (not b92)) c92))) (or (not (and (and a91 (not b91)) c91)) (and (and a92 b92) (not c92)))) (or (not (and (and a91 b91) (not c91))) (and (and a92 b92) c92))) (or (not (and (and a91 b91) c91)) (and (and (not a92) (not b92)) (not c92)))))
(assert-soft O_t91)
(define-fun O_t92() Bool(and (and (and (and (and (and (and (and (and (not INITIAL93) (or (not INITIAL92) (and (and (not a92) (not b92)) (not c92)))) (or (not (and (and (not a92) (not b92)) (not c92))) (and (and (not a93) (not b93)) c93))) (or (not (and (and (not a92) (not b92)) c92)) (and (and (not a93) b93) (not c93)))) (or (not (and (and (not a92) b92) (not c92))) (and (and (not a93) b93) c93))) (or (not (and (and (not a92) b92) c92)) (and (and a93 (not b93)) (not c93)))) (or (not (and (and a92 (not b92)) (not c92))) (and (and a93 (not b93)) c93))) (or (not (and (and a92 (not b92)) c92)) (and (and a93 b93) (not c93)))) (or (not (and (and a92 b92) (not c92))) (and (and a93 b93) c93))) (or (not (and (and a92 b92) c92)) (and (and (not a93) (not b93)) (not c93)))))
(assert-soft O_t92)
(define-fun O_t93() Bool(and (and (and (and (and (and (and (and (and (not INITIAL94) (or (not INITIAL93) (and (and (not a93) (not b93)) (not c93)))) (or (not (and (and (not a93) (not b93)) (not c93))) (and (and (not a94) (not b94)) c94))) (or (not (and (and (not a93) (not b93)) c93)) (and (and (not a94) b94) (not c94)))) (or (not (and (and (not a93) b93) (not c93))) (and (and (not a94) b94) c94))) (or (not (and (and (not a93) b93) c93)) (and (and a94 (not b94)) (not c94)))) (or (not (and (and a93 (not b93)) (not c93))) (and (and a94 (not b94)) c94))) (or (not (and (and a93 (not b93)) c93)) (and (and a94 b94) (not c94)))) (or (not (and (and a93 b93) (not c93))) (and (and a94 b94) c94))) (or (not (and (and a93 b93) c93)) (and (and (not a94) (not b94)) (not c94)))))
(assert-soft O_t93)
(define-fun O_t94() Bool(and (and (and (and (and (and (and (and (and (not INITIAL95) (or (not INITIAL94) (and (and (not a94) (not b94)) (not c94)))) (or (not (and (and (not a94) (not b94)) (not c94))) (and (and (not a95) (not b95)) c95))) (or (not (and (and (not a94) (not b94)) c94)) (and (and (not a95) b95) (not c95)))) (or (not (and (and (not a94) b94) (not c94))) (and (and (not a95) b95) c95))) (or (not (and (and (not a94) b94) c94)) (and (and a95 (not b95)) (not c95)))) (or (not (and (and a94 (not b94)) (not c94))) (and (and a95 (not b95)) c95))) (or (not (and (and a94 (not b94)) c94)) (and (and a95 b95) (not c95)))) (or (not (and (and a94 b94) (not c94))) (and (and a95 b95) c95))) (or (not (and (and a94 b94) c94)) (and (and (not a95) (not b95)) (not c95)))))
(assert-soft O_t94)
(define-fun O_t95() Bool(and (and (and (and (and (and (and (and (and (not INITIAL96) (or (not INITIAL95) (and (and (not a95) (not b95)) (not c95)))) (or (not (and (and (not a95) (not b95)) (not c95))) (and (and (not a96) (not b96)) c96))) (or (not (and (and (not a95) (not b95)) c95)) (and (and (not a96) b96) (not c96)))) (or (not (and (and (not a95) b95) (not c95))) (and (and (not a96) b96) c96))) (or (not (and (and (not a95) b95) c95)) (and (and a96 (not b96)) (not c96)))) (or (not (and (and a95 (not b95)) (not c95))) (and (and a96 (not b96)) c96))) (or (not (and (and a95 (not b95)) c95)) (and (and a96 b96) (not c96)))) (or (not (and (and a95 b95) (not c95))) (and (and a96 b96) c96))) (or (not (and (and a95 b95) c95)) (and (and (not a96) (not b96)) (not c96)))))
(assert-soft O_t95)
(define-fun O_t96() Bool(and (and (and (and (and (and (and (and (and (not INITIAL97) (or (not INITIAL96) (and (and (not a96) (not b96)) (not c96)))) (or (not (and (and (not a96) (not b96)) (not c96))) (and (and (not a97) (not b97)) c97))) (or (not (and (and (not a96) (not b96)) c96)) (and (and (not a97) b97) (not c97)))) (or (not (and (and (not a96) b96) (not c96))) (and (and (not a97) b97) c97))) (or (not (and (and (not a96) b96) c96)) (and (and a97 (not b97)) (not c97)))) (or (not (and (and a96 (not b96)) (not c96))) (and (and a97 (not b97)) c97))) (or (not (and (and a96 (not b96)) c96)) (and (and a97 b97) (not c97)))) (or (not (and (and a96 b96) (not c96))) (and (and a97 b97) c97))) (or (not (and (and a96 b96) c96)) (and (and (not a97) (not b97)) (not c97)))))
(assert-soft O_t96)
(define-fun O_t97() Bool(and (and (and (and (and (and (and (and (and (not INITIAL98) (or (not INITIAL97) (and (and (not a97) (not b97)) (not c97)))) (or (not (and (and (not a97) (not b97)) (not c97))) (and (and (not a98) (not b98)) c98))) (or (not (and (and (not a97) (not b97)) c97)) (and (and (not a98) b98) (not c98)))) (or (not (and (and (not a97) b97) (not c97))) (and (and (not a98) b98) c98))) (or (not (and (and (not a97) b97) c97)) (and (and a98 (not b98)) (not c98)))) (or (not (and (and a97 (not b97)) (not c97))) (and (and a98 (not b98)) c98))) (or (not (and (and a97 (not b97)) c97)) (and (and a98 b98) (not c98)))) (or (not (and (and a97 b97) (not c97))) (and (and a98 b98) c98))) (or (not (and (and a97 b97) c97)) (and (and (not a98) (not b98)) (not c98)))))
(assert-soft O_t97)
(define-fun O_t98() Bool(and (and (and (and (and (and (and (and (and (not INITIAL99) (or (not INITIAL98) (and (and (not a98) (not b98)) (not c98)))) (or (not (and (and (not a98) (not b98)) (not c98))) (and (and (not a99) (not b99)) c99))) (or (not (and (and (not a98) (not b98)) c98)) (and (and (not a99) b99) (not c99)))) (or (not (and (and (not a98) b98) (not c98))) (and (and (not a99) b99) c99))) (or (not (and (and (not a98) b98) c98)) (and (and a99 (not b99)) (not c99)))) (or (not (and (and a98 (not b98)) (not c98))) (and (and a99 (not b99)) c99))) (or (not (and (and a98 (not b98)) c98)) (and (and a99 b99) (not c99)))) (or (not (and (and a98 b98) (not c98))) (and (and a99 b99) c99))) (or (not (and (and a98 b98) c98)) (and (and (not a99) (not b99)) (not c99)))))
(assert-soft O_t98)
(define-fun O_t99() Bool(and (and (and (and (and (and (and (and (and (not INITIAL100) (or (not INITIAL99) (and (and (not a99) (not b99)) (not c99)))) (or (not (and (and (not a99) (not b99)) (not c99))) (and (and (not a100) (not b100)) c100))) (or (not (and (and (not a99) (not b99)) c99)) (and (and (not a100) b100) (not c100)))) (or (not (and (and (not a99) b99) (not c99))) (and (and (not a100) b100) c100))) (or (not (and (and (not a99) b99) c99)) (and (and a100 (not b100)) (not c100)))) (or (not (and (and a99 (not b99)) (not c99))) (and (and a100 (not b100)) c100))) (or (not (and (and a99 (not b99)) c99)) (and (and a100 b100) (not c100)))) (or (not (and (and a99 b99) (not c99))) (and (and a100 b100) c100))) (or (not (and (and a99 b99) c99)) (and (and (not a100) (not b100)) (not c100)))))
(assert-soft O_t99)
(set-option :opt.priority pareto)
(check-sat)
(get-model)
(echo " ")
(eval O_t0)
(echo " ")
(eval O_t1)
(echo " ")
(eval O_t2)
(echo " ")
(eval O_t3)
(echo " ")
(eval O_t4)
(echo " ")
(eval O_t5)
(echo " ")
(eval O_t6)
(echo " ")
(eval O_t7)
(echo " ")
(eval O_t8)
(echo " ")
(eval O_t9)
(echo " ")
(eval O_t10)
(echo " ")
(eval O_t11)
(echo " ")
(eval O_t12)
(echo " ")
(eval O_t13)
(echo " ")
(eval O_t14)
(echo " ")
(eval O_t15)
(echo " ")
(eval O_t16)
(echo " ")
(eval O_t17)
(echo " ")
(eval O_t18)
(echo " ")
(eval O_t19)
(echo " ")
(eval O_t20)
(echo " ")
(eval O_t21)
(echo " ")
(eval O_t22)
(echo " ")
(eval O_t23)
(echo " ")
(eval O_t24)
(echo " ")
(eval O_t25)
(echo " ")
(eval O_t26)
(echo " ")
(eval O_t27)
(echo " ")
(eval O_t28)
(echo " ")
(eval O_t29)
(echo " ")
(eval O_t30)
(echo " ")
(eval O_t31)
(echo " ")
(eval O_t32)
(echo " ")
(eval O_t33)
(echo " ")
(eval O_t34)
(echo " ")
(eval O_t35)
(echo " ")
(eval O_t36)
(echo " ")
(eval O_t37)
(echo " ")
(eval O_t38)
(echo " ")
(eval O_t39)
(echo " ")
(eval O_t40)
(echo " ")
(eval O_t41)
(echo " ")
(eval O_t42)
(echo " ")
(eval O_t43)
(echo " ")
(eval O_t44)
(echo " ")
(eval O_t45)
(echo " ")
(eval O_t46)
(echo " ")
(eval O_t47)
(echo " ")
(eval O_t48)
(echo " ")
(eval O_t49)
(echo " ")
(eval O_t50)
(echo " ")
(eval O_t51)
(echo " ")
(eval O_t52)
(echo " ")
(eval O_t53)
(echo " ")
(eval O_t54)
(echo " ")
(eval O_t55)
(echo " ")
(eval O_t56)
(echo " ")
(eval O_t57)
(echo " ")
(eval O_t58)
(echo " ")
(eval O_t59)
(echo " ")
(eval O_t60)
(echo " ")
(eval O_t61)
(echo " ")
(eval O_t62)
(echo " ")
(eval O_t63)
(echo " ")
(eval O_t64)
(echo " ")
(eval O_t65)
(echo " ")
(eval O_t66)
(echo " ")
(eval O_t67)
(echo " ")
(eval O_t68)
(echo " ")
(eval O_t69)
(echo " ")
(eval O_t70)
(echo " ")
(eval O_t71)
(echo " ")
(eval O_t72)
(echo " ")
(eval O_t73)
(echo " ")
(eval O_t74)
(echo " ")
(eval O_t75)
(echo " ")
(eval O_t76)
(echo " ")
(eval O_t77)
(echo " ")
(eval O_t78)
(echo " ")
(eval O_t79)
(echo " ")
(eval O_t80)
(echo " ")
(eval O_t81)
(echo " ")
(eval O_t82)
(echo " ")
(eval O_t83)
(echo " ")
(eval O_t84)
(echo " ")
(eval O_t85)
(echo " ")
(eval O_t86)
(echo " ")
(eval O_t87)
(echo " ")
(eval O_t88)
(echo " ")
(eval O_t89)
(echo " ")
(eval O_t90)
(echo " ")
(eval O_t91)
(echo " ")
(eval O_t92)
(echo " ")
(eval O_t93)
(echo " ")
(eval O_t94)
(echo " ")
(eval O_t95)
(echo " ")
(eval O_t96)
(echo " ")
(eval O_t97)
(echo " ")
(eval O_t98)
(echo " ")
(eval O_t99)
(echo " ")


SAT SOLVER RESULT

sat(model   (define-fun b37 () Bool    false)  (define-fun b35 () Bool    true)  (define-fun a86 () Bool    true)  (define-fun c18 () Bool    false)  (define-fun c21 () Bool    true)  (define-fun b67 () Bool    true)  (define-fun INITIAL54 () Bool    false)  (define-fun a10 () Bool    false)  (define-fun b24 () Bool    false)  (define-fun a99 () Bool    false)  (define-fun a73 () Bool    false)  (define-fun INITIAL11 () Bool    false)  (define-fun c12 () Bool    false)  (define-fun c35 () Bool    true)  (define-fun a27 () Bool    false)  (define-fun b52 () Bool    false)  (define-fun c85 () Bool    true)  (define-fun INITIAL10 () Bool    false)  (define-fun INITIAL75 () Bool    false)  (define-fun a75 () Bool    false)  (define-fun a47 () Bool    true)  (define-fun INITIAL40 () Bool    false)  (define-fun b22 () Bool    true)  (define-fun c84 () Bool    false)  (define-fun INITIAL89 () Bool    false)  (define-fun b75 () Bool    true)  (define-fun c5 () Bool    true)  (define-fun INITIAL30 () Bool    false)  (define-fun b19 () Bool    true)  (define-fun c69 () Bool    true)  (define-fun a80 () Bool    false)  (define-fun b90 () Bool    true)  (define-fun c34 () Bool    false)  (define-fun INITIAL27 () Bool    false)  (define-fun a17 () Bool    false)  (define-fun INITIAL12 () Bool    false)  (define-fun c93 () Bool    true)  (define-fun b8 () Bool    false)  (define-fun a81 () Bool    false)  (define-fun INITIAL8 () Bool    false)  (define-fun c68 () Bool    false)  (define-fun INITIAL45 () Bool    false)  (define-fun INITIAL53 () Bool    false)  (define-fun a71 () Bool    true)  (define-fun c54 () Bool    false)  (define-fun INITIAL61 () Bool    false)  (define-fun INITIAL85 () Bool    false)  (define-fun INITIAL50 () Bool    false)  (define-fun b9 () Bool    false)  (define-fun INITIAL39 () Bool    false)  (define-fun c86 () Bool    false)  (define-fun b33 () Bool    false)  (define-fun c28 () Bool    false)  (define-fun c17 () Bool    true)  (define-fun a4 () Bool    true)  (define-fun a3 () Bool    false)  (define-fun b88 () Bool    false)  (define-fun c95 () Bool    true)  (define-fun b51 () Bool    true)  (define-fun INITIAL73 () Bool    false)  (define-fun INITIAL48 () Bool    false)  (define-fun c100 () Bool    false)  (define-fun a77 () Bool    true)  (define-fun b59 () Bool    true)  (define-fun a59 () Bool    false)  (define-fun INITIAL5 () Bool    false)  (define-fun INITIAL14 () Bool    false)  (define-fun INITIAL41 () Bool    false)  (define-fun a40 () Bool    false)  (define-fun INITIAL94 () Bool    false)  (define-fun c24 () Bool    false)  (define-fun b18 () Bool    true)  (define-fun a100 () Bool    true)  (define-fun b42 () Bool    true)  (define-fun c60 () Bool    false)  (define-fun a56 () Bool    false)  (define-fun INITIAL57 () Bool    false)  (define-fun a5 () Bool    true)  (define-fun b21 () Bool    false)  (define-fun b20 () Bool    false)  (define-fun b3 () Bool    true)  (define-fun c11 () Bool    true)  (define-fun c65 () Bool    true)  (define-fun c61 () Bool    true)  (define-fun INITIAL26 () Bool    false)  (define-fun INITIAL35 () Bool    false)  (define-fun a28 () Bool    true)  (define-fun a11 () Bool    false)  (define-fun c66 () Bool    false)  (define-fun b45 () Bool    false)  (define-fun a55 () Bool    true)  (define-fun b46 () Bool    true)  (define-fun a57 () Bool    false)  (define-fun c22 () Bool    false)  (define-fun a19 () Bool    false)  (define-fun c99 () Bool    true)  (define-fun a12 () Bool    true)  (define-fun b16 () Bool    false)  (define-fun c29 () Bool    true)  (define-fun c42 () Bool    false)  (define-fun b63 () Bool    true)  (define-fun a43 () Bool    false)  (define-fun a42 () Bool    false)  (define-fun INITIAL72 () Bool    false)  (define-fun INITIAL62 () Bool    false)  (define-fun INITIAL47 () Bool    false)  (define-fun INITIAL91 () Bool    false)  (define-fun INITIAL32 () Bool    false)  (define-fun a14 () Bool    true)  (define-fun b94 () Bool    true)  (define-fun c89 () Bool    true)  (define-fun a29 () Bool    true)  (define-fun c91 () Bool    true)  (define-fun c72 () Bool    false)  (define-fun a7 () Bool    true)  (define-fun a33 () Bool    false)  (define-fun a18 () Bool    false)  (define-fun INITIAL88 () Bool    false)  (define-fun INITIAL46 () Bool    false)  (define-fun INITIAL16 () Bool    false)  (define-fun INITIAL76 () Bool    false)  (define-fun b100 () Bool    false)  (define-fun c59 () Bool    true)  (define-fun a48 () Bool    false)  (define-fun a30 () Bool    true)  (define-fun INITIAL65 () Bool    false)  (define-fun a69 () Bool    true)  (define-fun c71 () Bool    true)  (define-fun INITIAL56 () Bool    false)  (define-fun INITIAL93 () Bool    false)  (define-fun c39 () Bool    true)  (define-fun b4 () Bool    false)  (define-fun c26 () Bool    false)  (define-fun b65 () Bool    false)  (define-fun b60 () Bool    false)  (define-fun INITIAL21 () Bool    false)  (define-fun c13 () Bool    true)  (define-fun b49 () Bool    false)  (define-fun b82 () Bool    true)  (define-fun b31 () Bool    true)  (define-fun a38 () Bool    true)  (define-fun INITIAL77 () Bool    false)  (define-fun a54 () Bool    true)  (define-fun INITIAL59 () Bool    false)  (define-fun INITIAL38 () Bool    false)  (define-fun c23 () Bool    true)  (define-fun INITIAL44 () Bool    false)  (define-fun c10 () Bool    false)  (define-fun INITIAL31 () Bool    false)  (define-fun c50 () Bool    false)  (define-fun b44 () Bool    false)  (define-fun a85 () Bool    true)  (define-fun b47 () Bool    true)  (define-fun c2 () Bool    false)  (define-fun a15 () Bool    true)  (define-fun INITIAL17 () Bool    false)  (define-fun INITIAL9 () Bool    false)  (define-fun b96 () Bool    false)  (define-fun INITIAL90 () Bool    false)  (define-fun c6 () Bool    false)  (define-fun a35 () Bool    false)  (define-fun c76 () Bool    false)  (define-fun INITIAL68 () Bool    false)  (define-fun b39 () Bool    true)  (define-fun b81 () Bool    false)  (define-fun c32 () Bool    false)  (define-fun a97 () Bool    false)  (define-fun b2 () Bool    true)  (define-fun c27 () Bool    true)  (define-fun b83 () Bool    true)  (define-fun c38 () Bool    false)  (define-fun c79 () Bool    true)  (define-fun b26 () Bool    true)  (define-fun c81 () Bool    true)  (define-fun c56 () Bool    false)  (define-fun c16 () Bool    false)  (define-fun c70 () Bool    false)  (define-fun b91 () Bool    true)  (define-fun INITIAL86 () Bool    false)  (define-fun a24 () Bool    false)  (define-fun b10 () Bool    true)  (define-fun c46 () Bool    false)  (define-fun b99 () Bool    true)  (define-fun c63 () Bool    true)  (define-fun c58 () Bool    false)  (define-fun INITIAL2 () Bool    false)  (define-fun b27 () Bool    true)  (define-fun b6 () Bool    true)  (define-fun c3 () Bool    true)  (define-fun b80 () Bool    false)  (define-fun a39 () Bool    true)  (define-fun a92 () Bool    true)  (define-fun c33 () Bool    true)  (define-fun INITIAL4 () Bool    false)  (define-fun INITIAL20 () Bool    false)  (define-fun INITIAL60 () Bool    false)  (define-fun c37 () Bool    true)  (define-fun b14 () Bool    true)  (define-fun b62 () Bool    true)  (define-fun c83 () Bool    true)  (define-fun a67 () Bool    false)  (define-fun a9 () Bool    false)  (define-fun a31 () Bool    true)  (define-fun b97 () Bool    false)  (define-fun a79 () Bool    true)  (define-fun b69 () Bool    false)  (define-fun INITIAL23 () Bool    false)  (define-fun INITIAL28 () Bool    false)  (define-fun c96 () Bool    false)  (define-fun INITIAL81 () Bool    false)  (define-fun b79 () Bool    true)  (define-fun c52 () Bool    false)  (define-fun INITIAL92 () Bool    false)  (define-fun INITIAL13 () Bool    false)  (define-fun b73 () Bool    false)  (define-fun b13 () Bool    false)  (define-fun b15 () Bool    true)  (define-fun b5 () Bool    false)  (define-fun INITIAL25 () Bool    false)  (define-fun b95 () Bool    true)  (define-fun c88 () Bool    false)  (define-fun b66 () Bool    true)  (define-fun a45 () Bool    true)  (define-fun INITIAL7 () Bool    false)  (define-fun c43 () Bool    true)  (define-fun a63 () Bool    true)  (define-fun c15 () Bool    true)  (define-fun b86 () Bool    true)  (define-fun b74 () Bool    true)  (define-fun INITIAL58 () Bool    false)  (define-fun INITIAL87 () Bool    false)  (define-fun a95 () Bool    true)  (define-fun a16 () Bool    false)  (define-fun INITIAL69 () Bool    false)  (define-fun a65 () Bool    false)  (define-fun INITIAL74 () Bool    false)  (define-fun b98 () Bool    true)  (define-fun a68 () Bool    true)  (define-fun a52 () Bool    true)  (define-fun c44 () Bool    false)  (define-fun INITIAL99 () Bool    false)  (define-fun b48 () Bool    false)  (define-fun c19 () Bool    true)  (define-fun INITIAL49 () Bool    false)  (define-fun c41 () Bool    true)  (define-fun a8 () Bool    false)  (define-fun INITIAL52 () Bool    false)  (define-fun c49 () Bool    true)  (define-fun INITIAL78 () Bool    false)  (define-fun b23 () Bool    true)  (define-fun b28 () Bool    false)  (define-fun a13 () Bool    true)  (define-fun a87 () Bool    true)  (define-fun c47 () Bool    true)  (define-fun a94 () Bool    true)  (define-fun a37 () Bool    true)  (define-fun c55 () Bool    true)  (define-fun b29 () Bool    false)  (define-fun c92 () Bool    false)  (define-fun INITIAL3 () Bool    false)  (define-fun INITIAL24 () Bool    false)  (define-fun a22 () Bool    true)  (define-fun a50 () Bool    false)  (define-fun b70 () Bool    true)  (define-fun c78 () Bool    false)  (define-fun a60 () Bool    true)  (define-fun INITIAL37 () Bool    false)  (define-fun a49 () Bool    false)  (define-fun a76 () Bool    true)  (define-fun INITIAL22 () Bool    false)  (define-fun INITIAL55 () Bool    false)  (define-fun c8 () Bool    false)  (define-fun b34 () Bool    true)  (define-fun INITIAL100 () Bool    false)  (define-fun a21 () Bool    true)  (define-fun c36 () Bool    false)  (define-fun c45 () Bool    true)  (define-fun c74 () Bool    false)  (define-fun b30 () Bool    true)  (define-fun c62 () Bool    false)  (define-fun b38 () Bool    true)  (define-fun c82 () Bool    false)  (define-fun a62 () Bool    true)  (define-fun b61 () Bool    false)  (define-fun c9 () Bool    true)  (define-fun c64 () Bool    false)  (define-fun c73 () Bool    true)  (define-fun INITIAL51 () Bool    false)  (define-fun a58 () Bool    false)  (define-fun c25 () Bool    true)  (define-fun b55 () Bool    true)  (define-fun c98 () Bool    false)  (define-fun a72 () Bool    false)  (define-fun b77 () Bool    false)  (define-fun a84 () Bool    true)  (define-fun a88 () Bool    false)  (define-fun b12 () Bool    false)  (define-fun a74 () Bool    false)  (define-fun INITIAL67 () Bool    false)  (define-fun b58 () Bool    true)  (define-fun INITIAL66 () Bool    false)  (define-fun INITIAL95 () Bool    false)  (define-fun INITIAL71 () Bool    false)  (define-fun INITIAL80 () Bool    false)  (define-fun a96 () Bool    false)  (define-fun a51 () Bool    false)  (define-fun INITIAL64 () Bool    false)  (define-fun a32 () Bool    false)  (define-fun c57 () Bool    true)  (define-fun b43 () Bool    true)  (define-fun INITIAL33 () Bool    false)  (define-fun c67 () Bool    true)  (define-fun c87 () Bool    true)  (define-fun b78 () Bool    true)  (define-fun a93 () Bool    true)  (define-fun a44 () Bool    true)  (define-fun INITIAL70 () Bool    false)  (define-fun c75 () Bool    true)  (define-fun a53 () Bool    true)  (define-fun b11 () Bool    true)  (define-fun c30 () Bool    false)  (define-fun a89 () Bool    false)  (define-fun a82 () Bool    false)  (define-fun INITIAL79 () Bool    false)  (define-fun INITIAL43 () Bool    false)  (define-fun b85 () Bool    false)  (define-fun INITIAL63 () Bool    false)  (define-fun a2 () Bool    false)  (define-fun b32 () Bool    false)  (define-fun INITIAL29 () Bool    false)  (define-fun a34 () Bool    false)  (define-fun c80 () Bool    false)  (define-fun c94 () Bool    false)  (define-fun a66 () Bool    false)  (define-fun b71 () Bool    true)  (define-fun a91 () Bool    false)  (define-fun c4 () Bool    false)  (define-fun c7 () Bool    true)  (define-fun INITIAL15 () Bool    false)  (define-fun b40 () Bool    false)  (define-fun INITIAL84 () Bool    false)  (define-fun b7 () Bool    true)  (define-fun c48 () Bool    false)  (define-fun c14 () Bool    false)  (define-fun b87 () Bool    true)  (define-fun a23 () Bool    true)  (define-fun c31 () Bool    true)  (define-fun INITIAL19 () Bool    false)  (define-fun a46 () Bool    true)  (define-fun b68 () Bool    false)  (define-fun c77 () Bool    true)  (define-fun a6 () Bool    true)  (define-fun a98 () Bool    false)  (define-fun a83 () Bool    false)  (define-fun a90 () Bool    false)  (define-fun a20 () Bool    true)  (define-fun a36 () Bool    true)  (define-fun a78 () Bool    true)  (define-fun INITIAL34 () Bool    false)  (define-fun INITIAL97 () Bool    false)  (define-fun a26 () Bool    false)  (define-fun INITIAL36 () Bool    false)  (define-fun c53 () Bool    true)  (define-fun b41 () Bool    false)  (define-fun INITIAL98 () Bool    false)  (define-fun b84 () Bool    false)  (define-fun INITIAL18 () Bool    false)  (define-fun c40 () Bool    false)  (define-fun c90 () Bool    false)  (define-fun INITIAL42 () Bool    false)  (define-fun b64 () Bool    false)  (define-fun b92 () Bool    false)  (define-fun INITIAL82 () Bool    false)  (define-fun INITIAL83 () Bool    false)  (define-fun a64 () Bool    false)  (define-fun INITIAL96 () Bool    false)  (define-fun b53 () Bool    false)  (define-fun b89 () Bool    false)  (define-fun INITIAL6 () Bool    false)  (define-fun a41 () Bool    false)  (define-fun b56 () Bool    false)  (define-fun c97 () Bool    true)  (define-fun c20 () Bool    false)  (define-fun a70 () Bool    true)  (define-fun b93 () Bool    false)  (define-fun b25 () Bool    false)  (define-fun a25 () Bool    false)  (define-fun b72 () Bool    false)  (define-fun b36 () Bool    false)  (define-fun b57 () Bool    false)  (define-fun b50 () Bool    true)  (define-fun b17 () Bool    false)  (define-fun a61 () Bool    true)  (define-fun b54 () Bool    true)  (define-fun c51 () Bool    true)  (define-fun b76 () Bool    false)  (define-fun c1 () Bool    true)  (define-fun b1 () Bool    false)  (define-fun c0 () Bool    false)  (define-fun b0 () Bool    false)  (define-fun INITIAL0 () Bool    true)  (define-fun a1 () Bool    false)  (define-fun a0 () Bool    false)  (define-fun INITIAL1 () Bool    false)) true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true true 

GENERATED TRACE

TIME, a, b, c, O_t, INITIAL, 
0, false, false, false, true, true, 
1, false, false, true, true, false, 
2, false, true, false, true, false, 
3, false, true, true, true, false, 
4, true, false, false, true, false, 
5, true, false, true, true, false, 
6, true, true, false, true, false, 
7, true, true, true, true, false, 
8, false, false, false, true, false, 
9, false, false, true, true, false, 
10, false, true, false, true, false, 
11, false, true, true, true, false, 
12, true, false, false, true, false, 
13, true, false, true, true, false, 
14, true, true, false, true, false, 
15, true, true, true, true, false, 
16, false, false, false, true, false, 
17, false, false, true, true, false, 
18, false, true, false, true, false, 
19, false, true, true, true, false, 
20, true, false, false, true, false, 
21, true, false, true, true, false, 
22, true, true, false, true, false, 
23, true, true, true, true, false, 
24, false, false, false, true, false, 
25, false, false, true, true, false, 
26, false, true, false, true, false, 
27, false, true, true, true, false, 
28, true, false, false, true, false, 
29, true, false, true, true, false, 
30, true, true, false, true, false, 
31, true, true, true, true, false, 
32, false, false, false, true, false, 
33, false, false, true, true, false, 
34, false, true, false, true, false, 
35, false, true, true, true, false, 
36, true, false, false, true, false, 
37, true, false, true, true, false, 
38, true, true, false, true, false, 
39, true, true, true, true, false, 
40, false, false, false, true, false, 
41, false, false, true, true, false, 
42, false, true, false, true, false, 
43, false, true, true, true, false, 
44, true, false, false, true, false, 
45, true, false, true, true, false, 
46, true, true, false, true, false, 
47, true, true, true, true, false, 
48, false, false, false, true, false, 
49, false, false, true, true, false, 
50, false, true, false, true, false, 
51, false, true, true, true, false, 
52, true, false, false, true, false, 
53, true, false, true, true, false, 
54, true, true, false, true, false, 
55, true, true, true, true, false, 
56, false, false, false, true, false, 
57, false, false, true, true, false, 
58, false, true, false, true, false, 
59, false, true, true, true, false, 
60, true, false, false, true, false, 
61, true, false, true, true, false, 
62, true, true, false, true, false, 
63, true, true, true, true, false, 
64, false, false, false, true, false, 
65, false, false, true, true, false, 
66, false, true, false, true, false, 
67, false, true, true, true, false, 
68, true, false, false, true, false, 
69, true, false, true, true, false, 
70, true, true, false, true, false, 
71, true, true, true, true, false, 
72, false, false, false, true, false, 
73, false, false, true, true, false, 
74, false, true, false, true, false, 
75, false, true, true, true, false, 
76, true, false, false, true, false, 
77, true, false, true, true, false, 
78, true, true, false, true, false, 
79, true, true, true, true, false, 
80, false, false, false, true, false, 
81, false, false, true, true, false, 
82, false, true, false, true, false, 
83, false, true, true, true, false, 
84, true, false, false, true, false, 
85, true, false, true, true, false, 
86, true, true, false, true, false, 
87, true, true, true, true, false, 
88, false, false, false, true, false, 
89, false, false, true, true, false, 
90, false, true, false, true, false, 
91, false, true, true, true, false, 
92, true, false, false, true, false, 
93, true, false, true, true, false, 
94, true, true, false, true, false, 
95, true, true, true, true, false, 
96, false, false, false, true, false, 
97, false, false, true, true, false, 
98, false, true, false, true, false, 
99, false, true, true, true, false, 



