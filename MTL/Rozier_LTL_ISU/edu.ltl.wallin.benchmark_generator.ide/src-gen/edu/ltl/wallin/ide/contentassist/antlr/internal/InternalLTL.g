/*
 * generated by Xtext 2.14.0
 */
grammar InternalLTL;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package edu.ltl.wallin.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package edu.ltl.wallin.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import edu.ltl.wallin.services.LTLGrammarAccess;

}
@parser::members {
	private LTLGrammarAccess grammarAccess;

	public void setGrammarAccess(LTLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleFormula
entryRuleFormula
:
{ before(grammarAccess.getFormulaRule()); }
	 ruleFormula
{ after(grammarAccess.getFormulaRule()); } 
	 EOF 
;

// Rule Formula
ruleFormula 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormulaAccess().getUntilFormulaParserRuleCall()); }
		ruleUntilFormula
		{ after(grammarAccess.getFormulaAccess().getUntilFormulaParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUntilFormula
entryRuleUntilFormula
:
{ before(grammarAccess.getUntilFormulaRule()); }
	 ruleUntilFormula
{ after(grammarAccess.getUntilFormulaRule()); } 
	 EOF 
;

// Rule UntilFormula
ruleUntilFormula 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUntilFormulaAccess().getGroup()); }
		(rule__UntilFormula__Group__0)
		{ after(grammarAccess.getUntilFormulaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnectiveFormula
entryRuleConnectiveFormula
:
{ before(grammarAccess.getConnectiveFormulaRule()); }
	 ruleConnectiveFormula
{ after(grammarAccess.getConnectiveFormulaRule()); } 
	 EOF 
;

// Rule ConnectiveFormula
ruleConnectiveFormula 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectiveFormulaAccess().getGroup()); }
		(rule__ConnectiveFormula__Group__0)
		{ after(grammarAccess.getConnectiveFormulaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr
:
{ before(grammarAccess.getUnaryExprRule()); }
	 ruleUnaryExpr
{ after(grammarAccess.getUnaryExprRule()); } 
	 EOF 
;

// Rule UnaryExpr
ruleUnaryExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExprAccess().getAlternatives()); }
		(rule__UnaryExpr__Alternatives)
		{ after(grammarAccess.getUnaryExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectiveFormula__OpAlternatives_1_0_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectiveFormulaAccess().getOpAmpersandKeyword_1_0_0_1_0_0()); }
		'&'
		{ after(grammarAccess.getConnectiveFormulaAccess().getOpAmpersandKeyword_1_0_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getConnectiveFormulaAccess().getOpVerticalLineKeyword_1_0_0_1_0_1()); }
		'|'
		{ after(grammarAccess.getConnectiveFormulaAccess().getOpVerticalLineKeyword_1_0_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getGroup_0()); }
		(rule__UnaryExpr__Group_0__0)
		{ after(grammarAccess.getUnaryExprAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getGroup_1()); }
		(rule__UnaryExpr__Group_1__0)
		{ after(grammarAccess.getUnaryExprAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getLiteralParserRuleCall_2()); }
		ruleLiteral
		{ after(grammarAccess.getUnaryExprAccess().getLiteralParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__OpAlternatives_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getOpFKeyword_0_1_0_0()); }
		'F'
		{ after(grammarAccess.getUnaryExprAccess().getOpFKeyword_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getOpGKeyword_0_1_0_1()); }
		'G'
		{ after(grammarAccess.getUnaryExprAccess().getOpGKeyword_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getGroup_0()); }
		(rule__Literal__Group_0__0)
		{ after(grammarAccess.getLiteralAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getGroup_1()); }
		(rule__Literal__Group_1__0)
		{ after(grammarAccess.getLiteralAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UntilFormula__Group__0__Impl
	rule__UntilFormula__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUntilFormulaAccess().getConnectiveFormulaParserRuleCall_0()); }
	ruleConnectiveFormula
	{ after(grammarAccess.getUntilFormulaAccess().getConnectiveFormulaParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UntilFormula__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUntilFormulaAccess().getGroup_1()); }
	(rule__UntilFormula__Group_1__0)*
	{ after(grammarAccess.getUntilFormulaAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UntilFormula__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UntilFormula__Group_1__0__Impl
	rule__UntilFormula__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUntilFormulaAccess().getGroup_1_0()); }
	(rule__UntilFormula__Group_1_0__0)
	{ after(grammarAccess.getUntilFormulaAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UntilFormula__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUntilFormulaAccess().getRightAssignment_1_1()); }
	(rule__UntilFormula__RightAssignment_1_1)
	{ after(grammarAccess.getUntilFormulaAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UntilFormula__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UntilFormula__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUntilFormulaAccess().getGroup_1_0_0()); }
	(rule__UntilFormula__Group_1_0_0__0)
	{ after(grammarAccess.getUntilFormulaAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UntilFormula__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UntilFormula__Group_1_0_0__0__Impl
	rule__UntilFormula__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUntilFormulaAccess().getBinaryExprLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getUntilFormulaAccess().getBinaryExprLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UntilFormula__Group_1_0_0__1__Impl
	rule__UntilFormula__Group_1_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUntilFormulaAccess().getOpAssignment_1_0_0_1()); }
	(rule__UntilFormula__OpAssignment_1_0_0_1)
	{ after(grammarAccess.getUntilFormulaAccess().getOpAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group_1_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UntilFormula__Group_1_0_0__2__Impl
	rule__UntilFormula__Group_1_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group_1_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUntilFormulaAccess().getLeftSquareBracketKeyword_1_0_0_2()); }
	'['
	{ after(grammarAccess.getUntilFormulaAccess().getLeftSquareBracketKeyword_1_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group_1_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UntilFormula__Group_1_0_0__3__Impl
	rule__UntilFormula__Group_1_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group_1_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUntilFormulaAccess().getLowerBoundAssignment_1_0_0_3()); }
	(rule__UntilFormula__LowerBoundAssignment_1_0_0_3)?
	{ after(grammarAccess.getUntilFormulaAccess().getLowerBoundAssignment_1_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group_1_0_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UntilFormula__Group_1_0_0__4__Impl
	rule__UntilFormula__Group_1_0_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group_1_0_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUntilFormulaAccess().getCommaKeyword_1_0_0_4()); }
	','
	{ after(grammarAccess.getUntilFormulaAccess().getCommaKeyword_1_0_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group_1_0_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UntilFormula__Group_1_0_0__5__Impl
	rule__UntilFormula__Group_1_0_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group_1_0_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUntilFormulaAccess().getEndAssignment_1_0_0_5()); }
	(rule__UntilFormula__EndAssignment_1_0_0_5)?
	{ after(grammarAccess.getUntilFormulaAccess().getEndAssignment_1_0_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group_1_0_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UntilFormula__Group_1_0_0__6__Impl
	rule__UntilFormula__Group_1_0_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group_1_0_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUntilFormulaAccess().getUpperBoundAssignment_1_0_0_6()); }
	(rule__UntilFormula__UpperBoundAssignment_1_0_0_6)?
	{ after(grammarAccess.getUntilFormulaAccess().getUpperBoundAssignment_1_0_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group_1_0_0__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UntilFormula__Group_1_0_0__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__Group_1_0_0__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUntilFormulaAccess().getRightSquareBracketKeyword_1_0_0_7()); }
	']'
	{ after(grammarAccess.getUntilFormulaAccess().getRightSquareBracketKeyword_1_0_0_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectiveFormula__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectiveFormula__Group__0__Impl
	rule__ConnectiveFormula__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectiveFormula__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectiveFormulaAccess().getUnaryExprParserRuleCall_0()); }
	ruleUnaryExpr
	{ after(grammarAccess.getConnectiveFormulaAccess().getUnaryExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectiveFormula__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectiveFormula__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectiveFormula__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectiveFormulaAccess().getGroup_1()); }
	(rule__ConnectiveFormula__Group_1__0)*
	{ after(grammarAccess.getConnectiveFormulaAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectiveFormula__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectiveFormula__Group_1__0__Impl
	rule__ConnectiveFormula__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectiveFormula__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectiveFormulaAccess().getGroup_1_0()); }
	(rule__ConnectiveFormula__Group_1_0__0)
	{ after(grammarAccess.getConnectiveFormulaAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectiveFormula__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectiveFormula__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectiveFormula__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectiveFormulaAccess().getRightAssignment_1_1()); }
	(rule__ConnectiveFormula__RightAssignment_1_1)
	{ after(grammarAccess.getConnectiveFormulaAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectiveFormula__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectiveFormula__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectiveFormula__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectiveFormulaAccess().getGroup_1_0_0()); }
	(rule__ConnectiveFormula__Group_1_0_0__0)
	{ after(grammarAccess.getConnectiveFormulaAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectiveFormula__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectiveFormula__Group_1_0_0__0__Impl
	rule__ConnectiveFormula__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectiveFormula__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectiveFormulaAccess().getBinaryExprLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getConnectiveFormulaAccess().getBinaryExprLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectiveFormula__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectiveFormula__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectiveFormula__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectiveFormulaAccess().getOpAssignment_1_0_0_1()); }
	(rule__ConnectiveFormula__OpAssignment_1_0_0_1)
	{ after(grammarAccess.getConnectiveFormulaAccess().getOpAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0__0__Impl
	rule__UnaryExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getUnaryExprAction_0_0()); }
	()
	{ after(grammarAccess.getUnaryExprAccess().getUnaryExprAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0__1__Impl
	rule__UnaryExpr__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getOpAssignment_0_1()); }
	(rule__UnaryExpr__OpAssignment_0_1)
	{ after(grammarAccess.getUnaryExprAccess().getOpAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0__2__Impl
	rule__UnaryExpr__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getLeftSquareBracketKeyword_0_2()); }
	'['
	{ after(grammarAccess.getUnaryExprAccess().getLeftSquareBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0__3__Impl
	rule__UnaryExpr__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getLowerBoundAssignment_0_3()); }
	(rule__UnaryExpr__LowerBoundAssignment_0_3)?
	{ after(grammarAccess.getUnaryExprAccess().getLowerBoundAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0__4__Impl
	rule__UnaryExpr__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getCommaKeyword_0_4()); }
	','
	{ after(grammarAccess.getUnaryExprAccess().getCommaKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0__5__Impl
	rule__UnaryExpr__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getEndAssignment_0_5()); }
	(rule__UnaryExpr__EndAssignment_0_5)?
	{ after(grammarAccess.getUnaryExprAccess().getEndAssignment_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0__6__Impl
	rule__UnaryExpr__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getUpperBoundAssignment_0_6()); }
	(rule__UnaryExpr__UpperBoundAssignment_0_6)?
	{ after(grammarAccess.getUnaryExprAccess().getUpperBoundAssignment_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0__7__Impl
	rule__UnaryExpr__Group_0__8
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getRightSquareBracketKeyword_0_7()); }
	']'
	{ after(grammarAccess.getUnaryExprAccess().getRightSquareBracketKeyword_0_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getExprAssignment_0_8()); }
	(rule__UnaryExpr__ExprAssignment_0_8)
	{ after(grammarAccess.getUnaryExprAccess().getExprAssignment_0_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_1__0__Impl
	rule__UnaryExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getUnaryExprAction_1_0()); }
	()
	{ after(grammarAccess.getUnaryExprAccess().getUnaryExprAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_1__1__Impl
	rule__UnaryExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getOpAssignment_1_1()); }
	(rule__UnaryExpr__OpAssignment_1_1)
	{ after(grammarAccess.getUnaryExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getExprAssignment_1_2()); }
	(rule__UnaryExpr__ExprAssignment_1_2)
	{ after(grammarAccess.getUnaryExprAccess().getExprAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_0__0__Impl
	rule__Literal__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getIdFormulaAction_0_0()); }
	()
	{ after(grammarAccess.getLiteralAccess().getIdFormulaAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_0__1__Impl
	rule__Literal__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getVarNameAssignment_0_1()); }
	(rule__Literal__VarNameAssignment_0_1)
	{ after(grammarAccess.getLiteralAccess().getVarNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_0__2__Impl
	rule__Literal__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getGroup_0_2()); }
	(rule__Literal__Group_0_2__0)?
	{ after(grammarAccess.getLiteralAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getGroup_0_3()); }
	(rule__Literal__Group_0_3__0)?
	{ after(grammarAccess.getLiteralAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_0_2__0__Impl
	rule__Literal__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getLowerKeyword_0_2_0()); }
	'lower='
	{ after(grammarAccess.getLiteralAccess().getLowerKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getLowerBoundAssignment_0_2_1()); }
	(rule__Literal__LowerBoundAssignment_0_2_1)
	{ after(grammarAccess.getLiteralAccess().getLowerBoundAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_0_3__0__Impl
	rule__Literal__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getUpperKeyword_0_3_0()); }
	'upper='
	{ after(grammarAccess.getLiteralAccess().getUpperKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getUpperBoundAssignment_0_3_1()); }
	(rule__Literal__UpperBoundAssignment_0_3_1)
	{ after(grammarAccess.getLiteralAccess().getUpperBoundAssignment_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_1__0__Impl
	rule__Literal__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getLiteralAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_1__1__Impl
	rule__Literal__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getFormulaParserRuleCall_1_1()); }
	ruleFormula
	{ after(grammarAccess.getLiteralAccess().getFormulaParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getLiteralAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UntilFormula__OpAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUntilFormulaAccess().getOpUKeyword_1_0_0_1_0()); }
		(
			{ before(grammarAccess.getUntilFormulaAccess().getOpUKeyword_1_0_0_1_0()); }
			'U'
			{ after(grammarAccess.getUntilFormulaAccess().getOpUKeyword_1_0_0_1_0()); }
		)
		{ after(grammarAccess.getUntilFormulaAccess().getOpUKeyword_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__LowerBoundAssignment_1_0_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUntilFormulaAccess().getLowerBoundINTTerminalRuleCall_1_0_0_3_0()); }
		RULE_INT
		{ after(grammarAccess.getUntilFormulaAccess().getLowerBoundINTTerminalRuleCall_1_0_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__EndAssignment_1_0_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUntilFormulaAccess().getEndEndKeyword_1_0_0_5_0()); }
		(
			{ before(grammarAccess.getUntilFormulaAccess().getEndEndKeyword_1_0_0_5_0()); }
			'end'
			{ after(grammarAccess.getUntilFormulaAccess().getEndEndKeyword_1_0_0_5_0()); }
		)
		{ after(grammarAccess.getUntilFormulaAccess().getEndEndKeyword_1_0_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__UpperBoundAssignment_1_0_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUntilFormulaAccess().getUpperBoundINTTerminalRuleCall_1_0_0_6_0()); }
		RULE_INT
		{ after(grammarAccess.getUntilFormulaAccess().getUpperBoundINTTerminalRuleCall_1_0_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilFormula__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUntilFormulaAccess().getRightConnectiveFormulaParserRuleCall_1_1_0()); }
		ruleConnectiveFormula
		{ after(grammarAccess.getUntilFormulaAccess().getRightConnectiveFormulaParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectiveFormula__OpAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectiveFormulaAccess().getOpAlternatives_1_0_0_1_0()); }
		(rule__ConnectiveFormula__OpAlternatives_1_0_0_1_0)
		{ after(grammarAccess.getConnectiveFormulaAccess().getOpAlternatives_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectiveFormula__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectiveFormulaAccess().getRightUnaryExprParserRuleCall_1_1_0()); }
		ruleUnaryExpr
		{ after(grammarAccess.getConnectiveFormulaAccess().getRightUnaryExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__OpAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getOpAlternatives_0_1_0()); }
		(rule__UnaryExpr__OpAlternatives_0_1_0)
		{ after(grammarAccess.getUnaryExprAccess().getOpAlternatives_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__LowerBoundAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getLowerBoundINTTerminalRuleCall_0_3_0()); }
		RULE_INT
		{ after(grammarAccess.getUnaryExprAccess().getLowerBoundINTTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__EndAssignment_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getEndEndKeyword_0_5_0()); }
		(
			{ before(grammarAccess.getUnaryExprAccess().getEndEndKeyword_0_5_0()); }
			'end'
			{ after(grammarAccess.getUnaryExprAccess().getEndEndKeyword_0_5_0()); }
		)
		{ after(grammarAccess.getUnaryExprAccess().getEndEndKeyword_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__UpperBoundAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getUpperBoundINTTerminalRuleCall_0_6_0()); }
		RULE_INT
		{ after(grammarAccess.getUnaryExprAccess().getUpperBoundINTTerminalRuleCall_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__ExprAssignment_0_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getExprUnaryExprParserRuleCall_0_8_0()); }
		ruleUnaryExpr
		{ after(grammarAccess.getUnaryExprAccess().getExprUnaryExprParserRuleCall_0_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getOpHyphenMinusKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getUnaryExprAccess().getOpHyphenMinusKeyword_1_1_0()); }
			'-'
			{ after(grammarAccess.getUnaryExprAccess().getOpHyphenMinusKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getUnaryExprAccess().getOpHyphenMinusKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__ExprAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getExprUnaryExprParserRuleCall_1_2_0()); }
		ruleUnaryExpr
		{ after(grammarAccess.getUnaryExprAccess().getExprUnaryExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__VarNameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getVarNameVAR_NAMETerminalRuleCall_0_1_0()); }
		RULE_VAR_NAME
		{ after(grammarAccess.getLiteralAccess().getVarNameVAR_NAMETerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__LowerBoundAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getLowerBoundINTTerminalRuleCall_0_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getLiteralAccess().getLowerBoundINTTerminalRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__UpperBoundAssignment_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getUpperBoundINTTerminalRuleCall_0_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getLiteralAccess().getUpperBoundINTTerminalRuleCall_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_VAR_NAME : 'a'..'z';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
